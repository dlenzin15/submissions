
DA7_Task2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000195e  000019f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000195e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  0080010a  0080010a  000019fc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00001a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012f6  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ba9  00000000  00000000  00002e5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a2  00000000  00000000  00003a07  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d0  00000000  00000000  000042ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000671  00000000  00000000  0000447c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004ba  00000000  00000000  00004aed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00004fa7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ee 00 	jmp	0x1dc	; 0x1dc <__ctors_end>
       4:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
       8:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
       c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      10:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      14:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      18:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      1c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      20:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      24:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      28:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      2c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      30:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      34:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      38:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      3c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      40:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      44:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      48:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      4c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      50:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      54:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      58:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      5c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      60:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      64:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      68:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      6c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      70:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      74:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      78:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      7c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      80:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      84:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      88:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      8c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      90:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      94:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      98:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      9c:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      a0:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      a4:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      a8:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      ac:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      b0:	0c 94 0b 01 	jmp	0x216	; 0x216 <__bad_interrupt>
      b4:	08 4a       	sbci	r16, 0xA8	; 168
      b6:	d7 3b       	cpi	r29, 0xB7	; 183
      b8:	3b ce       	rjmp	.-906    	; 0xfffffd30 <__eeprom_end+0xff7efd30>
      ba:	01 6e       	ori	r16, 0xE1	; 225
      bc:	84 bc       	out	0x24, r8	; 36
      be:	bf fd       	.word	0xfdbf	; ????
      c0:	c1 2f       	mov	r28, r17
      c2:	3d 6c       	ori	r19, 0xCD	; 205
      c4:	74 31       	cpi	r23, 0x14	; 20
      c6:	9a bd       	out	0x2a, r25	; 42
      c8:	56 83       	std	Z+6, r21	; 0x06
      ca:	3d da       	rcall	.-2950   	; 0xfffff546 <__eeprom_end+0xff7ef546>
      cc:	3d 00       	.word	0x003d	; ????
      ce:	c7 7f       	andi	r28, 0xF7	; 247
      d0:	11 be       	out	0x31, r1	; 49
      d2:	d9 e4       	ldi	r29, 0x49	; 73
      d4:	bb 4c       	sbci	r27, 0xCB	; 203
      d6:	3e 91       	ld	r19, -X
      d8:	6b aa       	std	Y+51, r6	; 0x33
      da:	aa be       	out	0x3a, r10	; 58
      dc:	00 00       	nop
      de:	00 80       	ld	r0, Z
      e0:	3f 00       	.word	0x003f	; ????

000000e2 <__trampolines_end>:
      e2:	00 40       	sbci	r16, 0x00	; 0
      e4:	7a 10       	cpse	r7, r10
      e6:	f3 5a       	subi	r31, 0xA3	; 163
      e8:	00 a0       	ldd	r0, Z+32	; 0x20
      ea:	72 4e       	sbci	r23, 0xE2	; 226
      ec:	18 09       	sbc	r17, r8
      ee:	00 10       	cpse	r0, r0
      f0:	a5 d4       	rcall	.+2378   	; 0xa3c <atan2+0x8>
      f2:	e8 00       	.word	0x00e8	; ????
      f4:	00 e8       	ldi	r16, 0x80	; 128
      f6:	76 48       	sbci	r23, 0x86	; 134
      f8:	17 00       	.word	0x0017	; ????
      fa:	00 e4       	ldi	r16, 0x40	; 64
      fc:	0b 54       	subi	r16, 0x4B	; 75
      fe:	02 00       	.word	0x0002	; ????
     100:	00 ca       	rjmp	.-3072   	; 0xfffff502 <__eeprom_end+0xff7ef502>
     102:	9a 3b       	cpi	r25, 0xBA	; 186
     104:	00 00       	nop
     106:	00 e1       	ldi	r16, 0x10	; 16
     108:	f5 05       	cpc	r31, r5
     10a:	00 00       	nop
     10c:	80 96       	adiw	r24, 0x20	; 32
     10e:	98 00       	.word	0x0098	; ????
     110:	00 00       	nop
     112:	40 42       	sbci	r20, 0x20	; 32
     114:	0f 00       	.word	0x000f	; ????
     116:	00 00       	nop
     118:	a0 86       	std	Z+8, r10	; 0x08
     11a:	01 00       	.word	0x0001	; ????
     11c:	00 00       	nop
     11e:	10 27       	eor	r17, r16
     120:	00 00       	nop
     122:	00 00       	nop
     124:	e8 03       	fmulsu	r22, r16
     126:	00 00       	nop
     128:	00 00       	nop
     12a:	64 00       	.word	0x0064	; ????
     12c:	00 00       	nop
     12e:	00 00       	nop
     130:	0a 00       	.word	0x000a	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	01 00       	.word	0x0001	; ????
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	2c 76       	andi	r18, 0x6C	; 108
     13e:	d8 88       	ldd	r13, Y+16	; 0x10
     140:	dc 67       	ori	r29, 0x7C	; 124
     142:	4f 08       	sbc	r4, r15
     144:	23 df       	rcall	.-442    	; 0xffffff8c <__eeprom_end+0xff7eff8c>
     146:	c1 df       	rcall	.-126    	; 0xca <__SREG__+0x8b>
     148:	ae 59       	subi	r26, 0x9E	; 158
     14a:	e1 b1       	in	r30, 0x01	; 1
     14c:	b7 96       	adiw	r30, 0x27	; 39
     14e:	e5 e3       	ldi	r30, 0x35	; 53
     150:	e4 53       	subi	r30, 0x34	; 52
     152:	c6 3a       	cpi	r28, 0xA6	; 166
     154:	e6 51       	subi	r30, 0x16	; 22
     156:	99 76       	andi	r25, 0x69	; 105
     158:	96 e8       	ldi	r25, 0x86	; 134
     15a:	e6 c2       	rjmp	.+1484   	; 0x728 <Read_RawValue+0xde>
     15c:	84 26       	eor	r8, r20
     15e:	eb 89       	ldd	r30, Y+19	; 0x13
     160:	8c 9b       	sbis	0x11, 4	; 17
     162:	62 ed       	ldi	r22, 0xD2	; 210
     164:	40 7c       	andi	r20, 0xC0	; 192
     166:	6f fc       	.word	0xfc6f	; ????
     168:	ef bc       	out	0x2f, r14	; 47
     16a:	9c 9f       	mul	r25, r28
     16c:	40 f2       	brcs	.-112    	; 0xfe <__trampolines_end+0x1c>
     16e:	ba a5       	ldd	r27, Y+42	; 0x2a
     170:	6f a5       	ldd	r22, Y+47	; 0x2f
     172:	f4 90       	lpm	r15, Z
     174:	05 5a       	subi	r16, 0xA5	; 165
     176:	2a f7       	brpl	.-54     	; 0x142 <__trampolines_end+0x60>
     178:	5c 93       	st	X, r21
     17a:	6b 6c       	ori	r22, 0xCB	; 203
     17c:	f9 67       	ori	r31, 0x79	; 121
     17e:	6d c1       	rjmp	.+730    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     180:	1b fc       	.word	0xfc1b	; ????
     182:	e0 e4       	ldi	r30, 0x40	; 64
     184:	0d 47       	sbci	r16, 0x7D	; 125
     186:	fe f5       	brtc	.+126    	; 0x206 <.do_clear_bss_loop>
     188:	20 e6       	ldi	r18, 0x60	; 96
     18a:	b5 00       	.word	0x00b5	; ????
     18c:	d0 ed       	ldi	r29, 0xD0	; 208
     18e:	90 2e       	mov	r9, r16
     190:	03 00       	.word	0x0003	; ????
     192:	94 35       	cpi	r25, 0x54	; 84
     194:	77 05       	cpc	r23, r7
     196:	00 80       	ld	r0, Z
     198:	84 1e       	adc	r8, r20
     19a:	08 00       	.word	0x0008	; ????
     19c:	00 20       	and	r0, r0
     19e:	4e 0a       	sbc	r4, r30
     1a0:	00 00       	nop
     1a2:	00 c8       	rjmp	.-4096   	; 0xfffff1a4 <__eeprom_end+0xff7ef1a4>
     1a4:	0c 33       	cpi	r16, 0x3C	; 60
     1a6:	33 33       	cpi	r19, 0x33	; 51
     1a8:	33 0f       	add	r19, r19
     1aa:	98 6e       	ori	r25, 0xE8	; 232
     1ac:	12 83       	std	Z+2, r17	; 0x02
     1ae:	11 41       	sbci	r17, 0x11	; 17
     1b0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b2:	21 14       	cp	r2, r1
     1b4:	89 3b       	cpi	r24, 0xB9	; 185
     1b6:	e6 55       	subi	r30, 0x56	; 86
     1b8:	16 cf       	rjmp	.-468    	; 0xffffffe6 <__eeprom_end+0xff7effe6>
     1ba:	fe e6       	ldi	r31, 0x6E	; 110
     1bc:	db 18       	sub	r13, r11
     1be:	d1 84       	ldd	r13, Z+9	; 0x09
     1c0:	4b 38       	cpi	r20, 0x8B	; 139
     1c2:	1b f7       	brvc	.-58     	; 0x18a <__trampolines_end+0xa8>
     1c4:	7c 1d       	adc	r23, r12
     1c6:	90 1d       	adc	r25, r0
     1c8:	a4 bb       	out	0x14, r26	; 20
     1ca:	e4 24       	eor	r14, r4
     1cc:	20 32       	cpi	r18, 0x20	; 32
     1ce:	84 72       	andi	r24, 0x24	; 36
     1d0:	5e 22       	and	r5, r30
     1d2:	81 00       	.word	0x0081	; ????
     1d4:	c9 f1       	breq	.+114    	; 0x248 <I2C_Repeated_Start+0x22>
     1d6:	24 ec       	ldi	r18, 0xC4	; 196
     1d8:	a1 e5       	ldi	r26, 0x51	; 81
     1da:	3d 27       	eor	r19, r29

000001dc <__ctors_end>:
     1dc:	11 24       	eor	r1, r1
     1de:	1f be       	out	0x3f, r1	; 63
     1e0:	cf ef       	ldi	r28, 0xFF	; 255
     1e2:	d8 e0       	ldi	r29, 0x08	; 8
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	cd bf       	out	0x3d, r28	; 61

000001e8 <__do_copy_data>:
     1e8:	11 e0       	ldi	r17, 0x01	; 1
     1ea:	a0 e0       	ldi	r26, 0x00	; 0
     1ec:	b1 e0       	ldi	r27, 0x01	; 1
     1ee:	ee e5       	ldi	r30, 0x5E	; 94
     1f0:	f9 e1       	ldi	r31, 0x19	; 25
     1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <__do_copy_data+0x10>
     1f4:	05 90       	lpm	r0, Z+
     1f6:	0d 92       	st	X+, r0
     1f8:	aa 30       	cpi	r26, 0x0A	; 10
     1fa:	b1 07       	cpc	r27, r17
     1fc:	d9 f7       	brne	.-10     	; 0x1f4 <__do_copy_data+0xc>

000001fe <__do_clear_bss>:
     1fe:	21 e0       	ldi	r18, 0x01	; 1
     200:	aa e0       	ldi	r26, 0x0A	; 10
     202:	b1 e0       	ldi	r27, 0x01	; 1
     204:	01 c0       	rjmp	.+2      	; 0x208 <.do_clear_bss_start>

00000206 <.do_clear_bss_loop>:
     206:	1d 92       	st	X+, r1

00000208 <.do_clear_bss_start>:
     208:	a2 33       	cpi	r26, 0x32	; 50
     20a:	b2 07       	cpc	r27, r18
     20c:	e1 f7       	brne	.-8      	; 0x206 <.do_clear_bss_loop>
     20e:	0e 94 d6 03 	call	0x7ac	; 0x7ac <main>
     212:	0c 94 ad 0c 	jmp	0x195a	; 0x195a <_exit>

00000216 <__bad_interrupt>:
     216:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000021a <I2C_Init>:
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     21a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     21e:	88 e4       	ldi	r24, 0x48	; 72
     220:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     224:	08 95       	ret

00000226 <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     226:	94 ea       	ldi	r25, 0xA4	; 164
     228:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     22c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     230:	99 23       	and	r25, r25
     232:	e4 f7       	brge	.-8      	; 0x22c <I2C_Repeated_Start+0x6>
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
     234:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     238:	98 7f       	andi	r25, 0xF8	; 248
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     23a:	90 31       	cpi	r25, 0x10	; 16
     23c:	91 f4       	brne	.+36     	; 0x262 <I2C_Repeated_Start+0x3c>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR0 = slave_read_address;								/* If yes then write SLA+R in TWI data register */
     23e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     242:	84 e8       	ldi	r24, 0x84	; 132
     244:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     248:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     24c:	88 23       	and	r24, r24
     24e:	e4 f7       	brge	.-8      	; 0x248 <I2C_Repeated_Start+0x22>
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
     250:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     254:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     256:	80 34       	cpi	r24, 0x40	; 64
     258:	31 f0       	breq	.+12     	; 0x266 <I2C_Repeated_Start+0x40>
	return 1;												/* If yes then return 1 to indicate ack received */
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     25a:	80 32       	cpi	r24, 0x20	; 32
     25c:	31 f4       	brne	.+12     	; 0x26a <I2C_Repeated_Start+0x44>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     25e:	82 e0       	ldi	r24, 0x02	; 2
     260:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	08 95       	ret
	TWDR0 = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     26a:	83 e0       	ldi	r24, 0x03	; 3
}
     26c:	08 95       	ret

0000026e <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR0=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
     26e:	84 e9       	ldi	r24, 0x94	; 148
     270:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(TWCR0 & (1<<TWSTO));								/* Wait until stop condition execution */
     274:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     278:	84 fd       	sbrc	r24, 4
     27a:	fc cf       	rjmp	.-8      	; 0x274 <I2C_Stop+0x6>
}
     27c:	08 95       	ret

0000027e <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
     27e:	cf 93       	push	r28
     280:	c8 2f       	mov	r28, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     282:	84 ea       	ldi	r24, 0xA4	; 164
     284:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		while (!(TWCR0 & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
     288:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     28c:	88 23       	and	r24, r24
     28e:	e4 f7       	brge	.-8      	; 0x288 <I2C_Start_Wait+0xa>
		status = TWSR0 & 0xF8;								/* Read TWI status register with masking lower three bits */
     290:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     294:	88 7f       	andi	r24, 0xF8	; 248
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
     296:	88 30       	cpi	r24, 0x08	; 8
     298:	a1 f7       	brne	.-24     	; 0x282 <I2C_Start_Wait+0x4>
		continue;											/* If no then continue with start loop again */
		TWDR0 = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     29a:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
		TWCR0 = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     29e:	84 e8       	ldi	r24, 0x84	; 132
     2a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		while (!(TWCR0 & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
     2a4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2a8:	88 23       	and	r24, r24
     2aa:	e4 f7       	brge	.-8      	; 0x2a4 <I2C_Start_Wait+0x26>
		status = TWSR0 & 0xF8;								/* Read TWI status register with masking lower three bits */
     2ac:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     2b0:	88 7f       	andi	r24, 0xF8	; 248
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
     2b2:	88 31       	cpi	r24, 0x18	; 24
     2b4:	19 f0       	breq	.+6      	; 0x2bc <I2C_Start_Wait+0x3e>
		{
			I2C_Stop();										/* If not then generate stop condition */
     2b6:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>
			continue;										/* continue with start loop again */
     2ba:	e3 cf       	rjmp	.-58     	; 0x282 <I2C_Start_Wait+0x4>
		}
		break;												/* If yes then break loop */
	}
}
     2bc:	cf 91       	pop	r28
     2be:	08 95       	ret

000002c0 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR0 = data;											/* Copy data in TWI data register */
     2c0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     2c4:	84 e8       	ldi	r24, 0x84	; 132
     2c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     2ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2ce:	88 23       	and	r24, r24
     2d0:	e4 f7       	brge	.-8      	; 0x2ca <I2C_Write+0xa>
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
     2d2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     2d6:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     2d8:	88 32       	cpi	r24, 0x28	; 40
     2da:	21 f0       	breq	.+8      	; 0x2e4 <I2C_Write+0x24>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     2dc:	80 33       	cpi	r24, 0x30	; 48
     2de:	21 f4       	brne	.+8      	; 0x2e8 <I2C_Write+0x28>
	return 1;												/* If yes then return 1 to indicate nack received */
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	08 95       	ret
	TWDR0 = data;											/* Copy data in TWI data register */
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     2e4:	80 e0       	ldi	r24, 0x00	; 0
     2e6:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     2e8:	82 e0       	ldi	r24, 0x02	; 2
}
     2ea:	08 95       	ret

000002ec <I2C_Read_Ack>:

char I2C_Read_Ack()										/* I2C read ack function */
{
	TWCR0=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     2ec:	84 ec       	ldi	r24, 0xC4	; 196
     2ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     2f2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2f6:	88 23       	and	r24, r24
     2f8:	e4 f7       	brge	.-8      	; 0x2f2 <I2C_Read_Ack+0x6>
	return TWDR0;											/* Return received data */
     2fa:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
     2fe:	08 95       	ret

00000300 <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR0=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     300:	84 e8       	ldi	r24, 0x84	; 132
     302:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     306:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     30a:	88 23       	and	r24, r24
     30c:	e4 f7       	brge	.-8      	; 0x306 <I2C_Read_Nack+0x6>
	return TWDR0;											/* Return received data */
     30e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     312:	08 95       	ret

00000314 <ComplementaryFilter>:

float Acc_x,Acc_y,Acc_z,Temperature,Gyro_x,Gyro_y,Gyro_z;
float pitch, roll, yaw;

void ComplementaryFilter()
{
     314:	4f 92       	push	r4
     316:	5f 92       	push	r5
     318:	6f 92       	push	r6
     31a:	7f 92       	push	r7
     31c:	8f 92       	push	r8
     31e:	9f 92       	push	r9
     320:	af 92       	push	r10
     322:	bf 92       	push	r11
     324:	cf 92       	push	r12
     326:	df 92       	push	r13
     328:	ef 92       	push	r14
     32a:	ff 92       	push	r15
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	cd b7       	in	r28, 0x3d	; 61
     332:	de b7       	in	r29, 0x3e	; 62
     334:	2a 97       	sbiw	r28, 0x0a	; 10
     336:	0f b6       	in	r0, 0x3f	; 63
     338:	f8 94       	cli
     33a:	de bf       	out	0x3e, r29	; 62
     33c:	0f be       	out	0x3f, r0	; 63
     33e:	cd bf       	out	0x3d, r28	; 61
	float pitchAcc, rollAcc;
	
	// Integrate the gyroscope data -> int(angularSpeed) = angle
	pitch += (Gyro_x / GYROSCOPE_SENSITIVITY) * dt; // Angle around the X-axis, (float)gyrData[0]
     340:	23 e3       	ldi	r18, 0x33	; 51
     342:	33 e3       	ldi	r19, 0x33	; 51
     344:	43 e8       	ldi	r20, 0x83	; 131
     346:	51 e4       	ldi	r21, 0x41	; 65
     348:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <Gyro_x>
     34c:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <Gyro_x+0x1>
     350:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <Gyro_x+0x2>
     354:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <Gyro_x+0x3>
     358:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__divsf3>
     35c:	2a e0       	ldi	r18, 0x0A	; 10
     35e:	37 ed       	ldi	r19, 0xD7	; 215
     360:	43 e2       	ldi	r20, 0x23	; 35
     362:	5c e3       	ldi	r21, 0x3C	; 60
     364:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     368:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <pitch>
     36c:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <pitch+0x1>
     370:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <pitch+0x2>
     374:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <pitch+0x3>
     378:	0e 94 9b 04 	call	0x936	; 0x936 <__addsf3>
     37c:	4b 01       	movw	r8, r22
     37e:	5c 01       	movw	r10, r24
     380:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <pitch>
     384:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <pitch+0x1>
     388:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <pitch+0x2>
     38c:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <pitch+0x3>
	roll -= (Gyro_y / GYROSCOPE_SENSITIVITY) * dt;    // Angle around the Y-axis, (float)gyrData[1]
     390:	23 e3       	ldi	r18, 0x33	; 51
     392:	33 e3       	ldi	r19, 0x33	; 51
     394:	43 e8       	ldi	r20, 0x83	; 131
     396:	51 e4       	ldi	r21, 0x41	; 65
     398:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <Gyro_y>
     39c:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <Gyro_y+0x1>
     3a0:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <Gyro_y+0x2>
     3a4:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <Gyro_y+0x3>
     3a8:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__divsf3>
     3ac:	2a e0       	ldi	r18, 0x0A	; 10
     3ae:	37 ed       	ldi	r19, 0xD7	; 215
     3b0:	43 e2       	ldi	r20, 0x23	; 35
     3b2:	5c e3       	ldi	r21, 0x3C	; 60
     3b4:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     3b8:	2b 01       	movw	r4, r22
     3ba:	3c 01       	movw	r6, r24
     3bc:	9b 01       	movw	r18, r22
     3be:	ac 01       	movw	r20, r24
     3c0:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <roll>
     3c4:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <roll+0x1>
     3c8:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <roll+0x2>
     3cc:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <roll+0x3>
     3d0:	0e 94 9a 04 	call	0x934	; 0x934 <__subsf3>
     3d4:	69 83       	std	Y+1, r22	; 0x01
     3d6:	7a 83       	std	Y+2, r23	; 0x02
     3d8:	8b 83       	std	Y+3, r24	; 0x03
     3da:	9c 83       	std	Y+4, r25	; 0x04
     3dc:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <roll>
     3e0:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <roll+0x1>
     3e4:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <roll+0x2>
     3e8:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <roll+0x3>
	yaw += (Gyro_y / GYROSCOPE_SENSITIVITY) * dt;
     3ec:	a3 01       	movw	r20, r6
     3ee:	92 01       	movw	r18, r4
     3f0:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <yaw>
     3f4:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <yaw+0x1>
     3f8:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <yaw+0x2>
     3fc:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <yaw+0x3>
     400:	0e 94 9b 04 	call	0x936	; 0x936 <__addsf3>
     404:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <yaw>
     408:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <yaw+0x1>
     40c:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <yaw+0x2>
     410:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <yaw+0x3>
	
	// Compensate for drift with accelerometer data if !bullshit
	// Sensitivity = -2 to 2 G at 16Bit -> 2G = 32768 && 0.5G = 8192
	int forceMagnitudeApprox = abs(Acc_x) + abs(Acc_y) + abs(Acc_z);
     414:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <Acc_x>
     418:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <Acc_x+0x1>
     41c:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <Acc_x+0x2>
     420:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <Acc_x+0x3>
     424:	8d 83       	std	Y+5, r24	; 0x05
     426:	9e 83       	std	Y+6, r25	; 0x06
     428:	af 83       	std	Y+7, r26	; 0x07
     42a:	b8 87       	std	Y+8, r27	; 0x08
     42c:	bc 01       	movw	r22, r24
     42e:	cd 01       	movw	r24, r26
     430:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__fixsfsi>
     434:	7a 87       	std	Y+10, r23	; 0x0a
     436:	69 87       	std	Y+9, r22	; 0x09
     438:	db 01       	movw	r26, r22
     43a:	bb 23       	and	r27, r27
     43c:	34 f4       	brge	.+12     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     43e:	22 27       	eor	r18, r18
     440:	33 27       	eor	r19, r19
     442:	26 1b       	sub	r18, r22
     444:	37 0b       	sbc	r19, r23
     446:	3a 87       	std	Y+10, r19	; 0x0a
     448:	29 87       	std	Y+9, r18	; 0x09
     44a:	40 90 16 01 	lds	r4, 0x0116	; 0x800116 <Acc_y>
     44e:	50 90 17 01 	lds	r5, 0x0117	; 0x800117 <Acc_y+0x1>
     452:	60 90 18 01 	lds	r6, 0x0118	; 0x800118 <Acc_y+0x2>
     456:	70 90 19 01 	lds	r7, 0x0119	; 0x800119 <Acc_y+0x3>
     45a:	c3 01       	movw	r24, r6
     45c:	b2 01       	movw	r22, r4
     45e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__fixsfsi>
     462:	9b 01       	movw	r18, r22
     464:	77 23       	and	r23, r23
     466:	24 f4       	brge	.+8      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
     468:	22 27       	eor	r18, r18
     46a:	33 27       	eor	r19, r19
     46c:	26 1b       	sub	r18, r22
     46e:	37 0b       	sbc	r19, r23
     470:	a9 85       	ldd	r26, Y+9	; 0x09
     472:	ba 85       	ldd	r27, Y+10	; 0x0a
     474:	a2 0f       	add	r26, r18
     476:	b3 1f       	adc	r27, r19
     478:	ba 87       	std	Y+10, r27	; 0x0a
     47a:	a9 87       	std	Y+9, r26	; 0x09
     47c:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <__data_end>
     480:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <__data_end+0x1>
     484:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <__data_end+0x2>
     488:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <__data_end+0x3>
     48c:	c7 01       	movw	r24, r14
     48e:	b6 01       	movw	r22, r12
     490:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__fixsfsi>
     494:	9b 01       	movw	r18, r22
     496:	77 23       	and	r23, r23
     498:	24 f4       	brge	.+8      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     49a:	22 27       	eor	r18, r18
     49c:	33 27       	eor	r19, r19
     49e:	26 1b       	sub	r18, r22
     4a0:	37 0b       	sbc	r19, r23
     4a2:	89 85       	ldd	r24, Y+9	; 0x09
     4a4:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a6:	82 0f       	add	r24, r18
     4a8:	93 1f       	adc	r25, r19
	if (forceMagnitudeApprox > 8192 && forceMagnitudeApprox < 32768)
     4aa:	81 30       	cpi	r24, 0x01	; 1
     4ac:	90 42       	sbci	r25, 0x20	; 32
     4ae:	0c f4       	brge	.+2      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
     4b0:	6c c0       	rjmp	.+216    	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
	{
		// Turning around the X axis results in a vector on the Y-axis
		pitchAcc = atan2f(Acc_y, Acc_z) * 180 / M_PI;
     4b2:	a7 01       	movw	r20, r14
     4b4:	96 01       	movw	r18, r12
     4b6:	c3 01       	movw	r24, r6
     4b8:	b2 01       	movw	r22, r4
     4ba:	0e 94 1a 05 	call	0xa34	; 0xa34 <atan2>
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	44 e3       	ldi	r20, 0x34	; 52
     4c4:	53 e4       	ldi	r21, 0x43	; 67
     4c6:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     4ca:	2b ed       	ldi	r18, 0xDB	; 219
     4cc:	3f e0       	ldi	r19, 0x0F	; 15
     4ce:	49 e4       	ldi	r20, 0x49	; 73
     4d0:	50 e4       	ldi	r21, 0x40	; 64
     4d2:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__divsf3>
     4d6:	2b 01       	movw	r4, r22
     4d8:	3c 01       	movw	r6, r24
		pitch = pitch * 0.98 + pitchAcc * 0.02;
     4da:	28 e4       	ldi	r18, 0x48	; 72
     4dc:	31 ee       	ldi	r19, 0xE1	; 225
     4de:	4a e7       	ldi	r20, 0x7A	; 122
     4e0:	5f e3       	ldi	r21, 0x3F	; 63
     4e2:	c5 01       	movw	r24, r10
     4e4:	b4 01       	movw	r22, r8
     4e6:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     4ea:	4b 01       	movw	r8, r22
     4ec:	5c 01       	movw	r10, r24
     4ee:	2a e0       	ldi	r18, 0x0A	; 10
     4f0:	37 ed       	ldi	r19, 0xD7	; 215
     4f2:	43 ea       	ldi	r20, 0xA3	; 163
     4f4:	5c e3       	ldi	r21, 0x3C	; 60
     4f6:	c3 01       	movw	r24, r6
     4f8:	b2 01       	movw	r22, r4
     4fa:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     4fe:	9b 01       	movw	r18, r22
     500:	ac 01       	movw	r20, r24
     502:	c5 01       	movw	r24, r10
     504:	b4 01       	movw	r22, r8
     506:	0e 94 9b 04 	call	0x936	; 0x936 <__addsf3>
     50a:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <pitch>
     50e:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <pitch+0x1>
     512:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <pitch+0x2>
     516:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <pitch+0x3>
		
		// Turning around the Y axis results in a vector on the X-axis
		rollAcc = atan2f(Acc_x, Acc_z) * 180 / M_PI;
     51a:	a7 01       	movw	r20, r14
     51c:	96 01       	movw	r18, r12
     51e:	6d 81       	ldd	r22, Y+5	; 0x05
     520:	7e 81       	ldd	r23, Y+6	; 0x06
     522:	8f 81       	ldd	r24, Y+7	; 0x07
     524:	98 85       	ldd	r25, Y+8	; 0x08
     526:	0e 94 1a 05 	call	0xa34	; 0xa34 <atan2>
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	44 e3       	ldi	r20, 0x34	; 52
     530:	53 e4       	ldi	r21, 0x43	; 67
     532:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     536:	2b ed       	ldi	r18, 0xDB	; 219
     538:	3f e0       	ldi	r19, 0x0F	; 15
     53a:	49 e4       	ldi	r20, 0x49	; 73
     53c:	50 e4       	ldi	r21, 0x40	; 64
     53e:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__divsf3>
     542:	4b 01       	movw	r8, r22
     544:	5c 01       	movw	r10, r24
		roll = roll * 0.98 + rollAcc * 0.02;
     546:	28 e4       	ldi	r18, 0x48	; 72
     548:	31 ee       	ldi	r19, 0xE1	; 225
     54a:	4a e7       	ldi	r20, 0x7A	; 122
     54c:	5f e3       	ldi	r21, 0x3F	; 63
     54e:	69 81       	ldd	r22, Y+1	; 0x01
     550:	7a 81       	ldd	r23, Y+2	; 0x02
     552:	8b 81       	ldd	r24, Y+3	; 0x03
     554:	9c 81       	ldd	r25, Y+4	; 0x04
     556:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     55a:	6b 01       	movw	r12, r22
     55c:	7c 01       	movw	r14, r24
     55e:	2a e0       	ldi	r18, 0x0A	; 10
     560:	37 ed       	ldi	r19, 0xD7	; 215
     562:	43 ea       	ldi	r20, 0xA3	; 163
     564:	5c e3       	ldi	r21, 0x3C	; 60
     566:	c5 01       	movw	r24, r10
     568:	b4 01       	movw	r22, r8
     56a:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3>
     56e:	9b 01       	movw	r18, r22
     570:	ac 01       	movw	r20, r24
     572:	c7 01       	movw	r24, r14
     574:	b6 01       	movw	r22, r12
     576:	0e 94 9b 04 	call	0x936	; 0x936 <__addsf3>
     57a:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <roll>
     57e:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <roll+0x1>
     582:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <roll+0x2>
     586:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <roll+0x3>
	}
}
     58a:	2a 96       	adiw	r28, 0x0a	; 10
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	ff 90       	pop	r15
     59c:	ef 90       	pop	r14
     59e:	df 90       	pop	r13
     5a0:	cf 90       	pop	r12
     5a2:	bf 90       	pop	r11
     5a4:	af 90       	pop	r10
     5a6:	9f 90       	pop	r9
     5a8:	8f 90       	pop	r8
     5aa:	7f 90       	pop	r7
     5ac:	6f 90       	pop	r6
     5ae:	5f 90       	pop	r5
     5b0:	4f 90       	pop	r4
     5b2:	08 95       	ret

000005b4 <MPU6050_Init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5b4:	2f ef       	ldi	r18, 0xFF	; 255
     5b6:	82 e5       	ldi	r24, 0x52	; 82
     5b8:	97 e0       	ldi	r25, 0x07	; 7
     5ba:	21 50       	subi	r18, 0x01	; 1
     5bc:	80 40       	sbci	r24, 0x00	; 0
     5be:	90 40       	sbci	r25, 0x00	; 0
     5c0:	e1 f7       	brne	.-8      	; 0x5ba <MPU6050_Init+0x6>
     5c2:	00 c0       	rjmp	.+0      	; 0x5c4 <MPU6050_Init+0x10>
     5c4:	00 00       	nop

void MPU6050_Init()										/* Gyro initialization function */
{
	_delay_ms(150);										/* Power up time >100ms */
	I2C_Start_Wait(0xD0);								/* Start with device write address */
     5c6:	80 ed       	ldi	r24, 0xD0	; 208
     5c8:	0e 94 3f 01 	call	0x27e	; 0x27e <I2C_Start_Wait>
	I2C_Write(SMPLRT_DIV);								/* Write to sample rate register */
     5cc:	89 e1       	ldi	r24, 0x19	; 25
     5ce:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Write(0x07);									/* 1KHz sample rate */
     5d2:	87 e0       	ldi	r24, 0x07	; 7
     5d4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Stop();
     5d8:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>

	I2C_Start_Wait(0xD0);
     5dc:	80 ed       	ldi	r24, 0xD0	; 208
     5de:	0e 94 3f 01 	call	0x27e	; 0x27e <I2C_Start_Wait>
	I2C_Write(PWR_MGMT_1);								/* Write to power management register */
     5e2:	8b e6       	ldi	r24, 0x6B	; 107
     5e4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Write(0x01);									/* X axis gyroscope reference frequency */
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Stop();
     5ee:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>

	I2C_Start_Wait(0xD0);
     5f2:	80 ed       	ldi	r24, 0xD0	; 208
     5f4:	0e 94 3f 01 	call	0x27e	; 0x27e <I2C_Start_Wait>
	I2C_Write(CONFIG);									/* Write to Configuration register */
     5f8:	8a e1       	ldi	r24, 0x1A	; 26
     5fa:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Write(0x00);									/* Fs = 8KHz */
     5fe:	80 e0       	ldi	r24, 0x00	; 0
     600:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Stop();
     604:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>

	I2C_Start_Wait(0xD0);
     608:	80 ed       	ldi	r24, 0xD0	; 208
     60a:	0e 94 3f 01 	call	0x27e	; 0x27e <I2C_Start_Wait>
	I2C_Write(GYRO_CONFIG);								/* Write to Gyro configuration register */
     60e:	8b e1       	ldi	r24, 0x1B	; 27
     610:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Write(0x18);									/* Full scale range +/- 2000 degree/C */
     614:	88 e1       	ldi	r24, 0x18	; 24
     616:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Stop();
     61a:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>

	I2C_Start_Wait(0xD0);
     61e:	80 ed       	ldi	r24, 0xD0	; 208
     620:	0e 94 3f 01 	call	0x27e	; 0x27e <I2C_Start_Wait>
	I2C_Write(INT_ENABLE);								/* Write to interrupt enable register */
     624:	88 e3       	ldi	r24, 0x38	; 56
     626:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Write(0x01);
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Stop();
     630:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>
     634:	08 95       	ret

00000636 <MPU_Start_Loc>:
}

void MPU_Start_Loc()
{
	I2C_Start_Wait(0xD0);								/* I2C start with device write address */
     636:	80 ed       	ldi	r24, 0xD0	; 208
     638:	0e 94 3f 01 	call	0x27e	; 0x27e <I2C_Start_Wait>
	I2C_Write(ACCEL_XOUT_H);							/* Write start location address from where to read */
     63c:	8b e3       	ldi	r24, 0x3B	; 59
     63e:	0e 94 60 01 	call	0x2c0	; 0x2c0 <I2C_Write>
	I2C_Repeated_Start(0xD1);							/* I2C start with device read address */
     642:	81 ed       	ldi	r24, 0xD1	; 209
     644:	0e 94 13 01 	call	0x226	; 0x226 <I2C_Repeated_Start>
     648:	08 95       	ret

0000064a <Read_RawValue>:
}

void Read_RawValue()
{
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
	MPU_Start_Loc();									/* Read Gyro values */
     64e:	0e 94 1b 03 	call	0x636	; 0x636 <MPU_Start_Loc>
	Acc_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     652:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     656:	c8 2f       	mov	r28, r24
     658:	d0 e0       	ldi	r29, 0x00	; 0
     65a:	dc 2f       	mov	r29, r28
     65c:	cc 27       	eor	r28, r28
     65e:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     662:	be 01       	movw	r22, r28
     664:	68 2b       	or	r22, r24
     666:	07 2e       	mov	r0, r23
     668:	00 0c       	add	r0, r0
     66a:	88 0b       	sbc	r24, r24
     66c:	99 0b       	sbc	r25, r25
     66e:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     672:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <Acc_x>
     676:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <Acc_x+0x1>
     67a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <Acc_x+0x2>
     67e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <Acc_x+0x3>
	Acc_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     682:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     686:	c8 2f       	mov	r28, r24
     688:	d0 e0       	ldi	r29, 0x00	; 0
     68a:	dc 2f       	mov	r29, r28
     68c:	cc 27       	eor	r28, r28
     68e:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     692:	be 01       	movw	r22, r28
     694:	68 2b       	or	r22, r24
     696:	07 2e       	mov	r0, r23
     698:	00 0c       	add	r0, r0
     69a:	88 0b       	sbc	r24, r24
     69c:	99 0b       	sbc	r25, r25
     69e:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     6a2:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <Acc_y>
     6a6:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <Acc_y+0x1>
     6aa:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <Acc_y+0x2>
     6ae:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <Acc_y+0x3>
	Acc_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     6b2:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     6b6:	c8 2f       	mov	r28, r24
     6b8:	d0 e0       	ldi	r29, 0x00	; 0
     6ba:	dc 2f       	mov	r29, r28
     6bc:	cc 27       	eor	r28, r28
     6be:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     6c2:	be 01       	movw	r22, r28
     6c4:	68 2b       	or	r22, r24
     6c6:	07 2e       	mov	r0, r23
     6c8:	00 0c       	add	r0, r0
     6ca:	88 0b       	sbc	r24, r24
     6cc:	99 0b       	sbc	r25, r25
     6ce:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     6d2:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__data_end>
     6d6:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <__data_end+0x1>
     6da:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end+0x2>
     6de:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x3>
	Temperature = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     6e2:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     6e6:	c8 2f       	mov	r28, r24
     6e8:	d0 e0       	ldi	r29, 0x00	; 0
     6ea:	dc 2f       	mov	r29, r28
     6ec:	cc 27       	eor	r28, r28
     6ee:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     6f2:	be 01       	movw	r22, r28
     6f4:	68 2b       	or	r22, r24
     6f6:	07 2e       	mov	r0, r23
     6f8:	00 0c       	add	r0, r0
     6fa:	88 0b       	sbc	r24, r24
     6fc:	99 0b       	sbc	r25, r25
     6fe:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     702:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <Temperature>
     706:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <Temperature+0x1>
     70a:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <Temperature+0x2>
     70e:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <Temperature+0x3>
	Gyro_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     712:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     716:	c8 2f       	mov	r28, r24
     718:	d0 e0       	ldi	r29, 0x00	; 0
     71a:	dc 2f       	mov	r29, r28
     71c:	cc 27       	eor	r28, r28
     71e:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     722:	be 01       	movw	r22, r28
     724:	68 2b       	or	r22, r24
     726:	07 2e       	mov	r0, r23
     728:	00 0c       	add	r0, r0
     72a:	88 0b       	sbc	r24, r24
     72c:	99 0b       	sbc	r25, r25
     72e:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     732:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <Gyro_x>
     736:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <Gyro_x+0x1>
     73a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <Gyro_x+0x2>
     73e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <Gyro_x+0x3>
	Gyro_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     742:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     746:	c8 2f       	mov	r28, r24
     748:	d0 e0       	ldi	r29, 0x00	; 0
     74a:	dc 2f       	mov	r29, r28
     74c:	cc 27       	eor	r28, r28
     74e:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     752:	be 01       	movw	r22, r28
     754:	68 2b       	or	r22, r24
     756:	07 2e       	mov	r0, r23
     758:	00 0c       	add	r0, r0
     75a:	88 0b       	sbc	r24, r24
     75c:	99 0b       	sbc	r25, r25
     75e:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     762:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <Gyro_y>
     766:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <Gyro_y+0x1>
     76a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <Gyro_y+0x2>
     76e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <Gyro_y+0x3>
	Gyro_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Nack());
     772:	0e 94 76 01 	call	0x2ec	; 0x2ec <I2C_Read_Ack>
     776:	c8 2f       	mov	r28, r24
     778:	d0 e0       	ldi	r29, 0x00	; 0
     77a:	dc 2f       	mov	r29, r28
     77c:	cc 27       	eor	r28, r28
     77e:	0e 94 80 01 	call	0x300	; 0x300 <I2C_Read_Nack>
     782:	be 01       	movw	r22, r28
     784:	68 2b       	or	r22, r24
     786:	07 2e       	mov	r0, r23
     788:	00 0c       	add	r0, r0
     78a:	88 0b       	sbc	r24, r24
     78c:	99 0b       	sbc	r25, r25
     78e:	0e 94 23 06 	call	0xc46	; 0xc46 <__floatsisf>
     792:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <Gyro_z>
     796:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <Gyro_z+0x1>
     79a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <Gyro_z+0x2>
     79e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <Gyro_z+0x3>
	I2C_Stop();
     7a2:	0e 94 37 01 	call	0x26e	; 0x26e <I2C_Stop>
}
     7a6:	df 91       	pop	r29
     7a8:	cf 91       	pop	r28
     7aa:	08 95       	ret

000007ac <main>:

int main()
{
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62
     7b4:	6e 97       	sbiw	r28, 0x1e	; 30
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
	char buffer[20], float_[10];
	float Xa,Ya,Za,t;
	float Xg=0,Yg=0,Zg=0;
	I2C_Init();											/* Initialize I2C */
     7c0:	0e 94 0d 01 	call	0x21a	; 0x21a <I2C_Init>
	MPU6050_Init();										/* Initialize MPU6050 */
     7c4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <MPU6050_Init>
	USART_Init(9600);									/* Initialize USART with 9600 baud rate */
     7c8:	60 e8       	ldi	r22, 0x80	; 128
     7ca:	75 e2       	ldi	r23, 0x25	; 37
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	0e 94 49 04 	call	0x892	; 0x892 <USART_Init>
	
	while(1)
	{
		Read_RawValue();
     7d4:	0e 94 25 03 	call	0x64a	; 0x64a <Read_RawValue>
		ComplementaryFilter();
     7d8:	0e 94 8a 01 	call	0x314	; 0x314 <ComplementaryFilter>
		
		dtostrf(pitch, 3, 2, float_);
     7dc:	7e 01       	movw	r14, r28
     7de:	85 e1       	ldi	r24, 0x15	; 21
     7e0:	e8 0e       	add	r14, r24
     7e2:	f1 1c       	adc	r15, r1
     7e4:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <pitch>
     7e8:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <pitch+0x1>
     7ec:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <pitch+0x2>
     7f0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <pitch+0x3>
     7f4:	87 01       	movw	r16, r14
     7f6:	22 e0       	ldi	r18, 0x02	; 2
     7f8:	43 e0       	ldi	r20, 0x03	; 3
     7fa:	0e 94 71 07 	call	0xee2	; 0xee2 <dtostrf>
		sprintf(buffer, "%s, ", float_);
     7fe:	ff 92       	push	r15
     800:	ef 92       	push	r14
     802:	0f 2e       	mov	r0, r31
     804:	f0 e0       	ldi	r31, 0x00	; 0
     806:	af 2e       	mov	r10, r31
     808:	f1 e0       	ldi	r31, 0x01	; 1
     80a:	bf 2e       	mov	r11, r31
     80c:	f0 2d       	mov	r31, r0
     80e:	bf 92       	push	r11
     810:	af 92       	push	r10
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	6c 01       	movw	r12, r24
     818:	9f 93       	push	r25
     81a:	8f 93       	push	r24
     81c:	0e 94 91 07 	call	0xf22	; 0xf22 <sprintf>
		USART_SendString(buffer);
     820:	c6 01       	movw	r24, r12
     822:	0e 94 84 04 	call	0x908	; 0x908 <USART_SendString>
		
		dtostrf(yaw, 3, 2, float_);
     826:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <yaw>
     82a:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <yaw+0x1>
     82e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <yaw+0x2>
     832:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <yaw+0x3>
     836:	22 e0       	ldi	r18, 0x02	; 2
     838:	43 e0       	ldi	r20, 0x03	; 3
     83a:	0e 94 71 07 	call	0xee2	; 0xee2 <dtostrf>
		sprintf(buffer, "%s, ", float_);
     83e:	ff 92       	push	r15
     840:	ef 92       	push	r14
     842:	bf 92       	push	r11
     844:	af 92       	push	r10
     846:	df 92       	push	r13
     848:	cf 92       	push	r12
     84a:	0e 94 91 07 	call	0xf22	; 0xf22 <sprintf>
		USART_SendString(buffer);
     84e:	c6 01       	movw	r24, r12
     850:	0e 94 84 04 	call	0x908	; 0x908 <USART_SendString>
		
		dtostrf(roll, 3, 2, float_);
     854:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <roll>
     858:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <roll+0x1>
     85c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <roll+0x2>
     860:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <roll+0x3>
     864:	22 e0       	ldi	r18, 0x02	; 2
     866:	43 e0       	ldi	r20, 0x03	; 3
     868:	0e 94 71 07 	call	0xee2	; 0xee2 <dtostrf>
		sprintf(buffer, "%s\r\n", float_);
     86c:	ff 92       	push	r15
     86e:	ef 92       	push	r14
     870:	85 e0       	ldi	r24, 0x05	; 5
     872:	91 e0       	ldi	r25, 0x01	; 1
     874:	9f 93       	push	r25
     876:	8f 93       	push	r24
     878:	df 92       	push	r13
     87a:	cf 92       	push	r12
     87c:	0e 94 91 07 	call	0xf22	; 0xf22 <sprintf>
		USART_SendString(buffer);
     880:	c6 01       	movw	r24, r12
     882:	0e 94 84 04 	call	0x908	; 0x908 <USART_SendString>
     886:	0f b6       	in	r0, 0x3f	; 63
     888:	f8 94       	cli
     88a:	de bf       	out	0x3e, r29	; 62
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	cd bf       	out	0x3d, r28	; 61
     890:	a1 cf       	rjmp	.-190    	; 0x7d4 <main+0x28>

00000892 <USART_Init>:

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR0A & (1 << RXC0)));					/* Wait until new data receive */
	return(UDR0);									/* Get and return received data */ 
}
     892:	e1 ec       	ldi	r30, 0xC1	; 193
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	20 81       	ld	r18, Z
     898:	28 61       	ori	r18, 0x18	; 24
     89a:	20 83       	st	Z, r18
     89c:	e2 ec       	ldi	r30, 0xC2	; 194
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	20 81       	ld	r18, Z
     8a2:	26 60       	ori	r18, 0x06	; 6
     8a4:	20 83       	st	Z, r18
     8a6:	dc 01       	movw	r26, r24
     8a8:	cb 01       	movw	r24, r22
     8aa:	88 0f       	add	r24, r24
     8ac:	99 1f       	adc	r25, r25
     8ae:	aa 1f       	adc	r26, r26
     8b0:	bb 1f       	adc	r27, r27
     8b2:	88 0f       	add	r24, r24
     8b4:	99 1f       	adc	r25, r25
     8b6:	aa 1f       	adc	r26, r26
     8b8:	bb 1f       	adc	r27, r27
     8ba:	9c 01       	movw	r18, r24
     8bc:	ad 01       	movw	r20, r26
     8be:	22 0f       	add	r18, r18
     8c0:	33 1f       	adc	r19, r19
     8c2:	44 1f       	adc	r20, r20
     8c4:	55 1f       	adc	r21, r21
     8c6:	22 0f       	add	r18, r18
     8c8:	33 1f       	adc	r19, r19
     8ca:	44 1f       	adc	r20, r20
     8cc:	55 1f       	adc	r21, r21
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	74 e2       	ldi	r23, 0x24	; 36
     8d2:	84 ef       	ldi	r24, 0xF4	; 244
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__udivmodsi4>
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	82 0f       	add	r24, r18
     8de:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     8e2:	da 01       	movw	r26, r20
     8e4:	c9 01       	movw	r24, r18
     8e6:	01 97       	sbiw	r24, 0x01	; 1
     8e8:	a1 09       	sbc	r26, r1
     8ea:	b1 09       	sbc	r27, r1
     8ec:	89 2f       	mov	r24, r25
     8ee:	9a 2f       	mov	r25, r26
     8f0:	ab 2f       	mov	r26, r27
     8f2:	bb 27       	eor	r27, r27
     8f4:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     8f8:	08 95       	ret

000008fa <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;										/* Write data to be transmitting in UDR */
     8fa:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
     8fe:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     902:	85 ff       	sbrs	r24, 5
     904:	fc cf       	rjmp	.-8      	; 0x8fe <USART_TxChar+0x4>
}
     906:	08 95       	ret

00000908 <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
     910:	8c 01       	movw	r16, r24
	int i=0;																	
     912:	c0 e0       	ldi	r28, 0x00	; 0
     914:	d0 e0       	ldi	r29, 0x00	; 0
	while (str[i]!=0)
     916:	03 c0       	rjmp	.+6      	; 0x91e <USART_SendString+0x16>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     918:	0e 94 7d 04 	call	0x8fa	; 0x8fa <USART_TxChar>
		i++;
     91c:	21 96       	adiw	r28, 0x01	; 1
}

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
	int i=0;																	
	while (str[i]!=0)
     91e:	f8 01       	movw	r30, r16
     920:	ec 0f       	add	r30, r28
     922:	fd 1f       	adc	r31, r29
     924:	80 81       	ld	r24, Z
     926:	81 11       	cpse	r24, r1
     928:	f7 cf       	rjmp	.-18     	; 0x918 <USART_SendString+0x10>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
     92a:	df 91       	pop	r29
     92c:	cf 91       	pop	r28
     92e:	1f 91       	pop	r17
     930:	0f 91       	pop	r16
     932:	08 95       	ret

00000934 <__subsf3>:
     934:	50 58       	subi	r21, 0x80	; 128

00000936 <__addsf3>:
     936:	bb 27       	eor	r27, r27
     938:	aa 27       	eor	r26, r26
     93a:	0e 94 b2 04 	call	0x964	; 0x964 <__addsf3x>
     93e:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>
     942:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     946:	38 f0       	brcs	.+14     	; 0x956 <__addsf3+0x20>
     948:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     94c:	20 f0       	brcs	.+8      	; 0x956 <__addsf3+0x20>
     94e:	39 f4       	brne	.+14     	; 0x95e <__addsf3+0x28>
     950:	9f 3f       	cpi	r25, 0xFF	; 255
     952:	19 f4       	brne	.+6      	; 0x95a <__addsf3+0x24>
     954:	26 f4       	brtc	.+8      	; 0x95e <__addsf3+0x28>
     956:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>
     95a:	0e f4       	brtc	.+2      	; 0x95e <__addsf3+0x28>
     95c:	e0 95       	com	r30
     95e:	e7 fb       	bst	r30, 7
     960:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>

00000964 <__addsf3x>:
     964:	e9 2f       	mov	r30, r25
     966:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     96a:	58 f3       	brcs	.-42     	; 0x942 <__addsf3+0xc>
     96c:	ba 17       	cp	r27, r26
     96e:	62 07       	cpc	r22, r18
     970:	73 07       	cpc	r23, r19
     972:	84 07       	cpc	r24, r20
     974:	95 07       	cpc	r25, r21
     976:	20 f0       	brcs	.+8      	; 0x980 <__addsf3x+0x1c>
     978:	79 f4       	brne	.+30     	; 0x998 <__addsf3x+0x34>
     97a:	a6 f5       	brtc	.+104    	; 0x9e4 <__addsf3x+0x80>
     97c:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_zero>
     980:	0e f4       	brtc	.+2      	; 0x984 <__addsf3x+0x20>
     982:	e0 95       	com	r30
     984:	0b 2e       	mov	r0, r27
     986:	ba 2f       	mov	r27, r26
     988:	a0 2d       	mov	r26, r0
     98a:	0b 01       	movw	r0, r22
     98c:	b9 01       	movw	r22, r18
     98e:	90 01       	movw	r18, r0
     990:	0c 01       	movw	r0, r24
     992:	ca 01       	movw	r24, r20
     994:	a0 01       	movw	r20, r0
     996:	11 24       	eor	r1, r1
     998:	ff 27       	eor	r31, r31
     99a:	59 1b       	sub	r21, r25
     99c:	99 f0       	breq	.+38     	; 0x9c4 <__addsf3x+0x60>
     99e:	59 3f       	cpi	r21, 0xF9	; 249
     9a0:	50 f4       	brcc	.+20     	; 0x9b6 <__addsf3x+0x52>
     9a2:	50 3e       	cpi	r21, 0xE0	; 224
     9a4:	68 f1       	brcs	.+90     	; 0xa00 <__addsf3x+0x9c>
     9a6:	1a 16       	cp	r1, r26
     9a8:	f0 40       	sbci	r31, 0x00	; 0
     9aa:	a2 2f       	mov	r26, r18
     9ac:	23 2f       	mov	r18, r19
     9ae:	34 2f       	mov	r19, r20
     9b0:	44 27       	eor	r20, r20
     9b2:	58 5f       	subi	r21, 0xF8	; 248
     9b4:	f3 cf       	rjmp	.-26     	; 0x99c <__addsf3x+0x38>
     9b6:	46 95       	lsr	r20
     9b8:	37 95       	ror	r19
     9ba:	27 95       	ror	r18
     9bc:	a7 95       	ror	r26
     9be:	f0 40       	sbci	r31, 0x00	; 0
     9c0:	53 95       	inc	r21
     9c2:	c9 f7       	brne	.-14     	; 0x9b6 <__addsf3x+0x52>
     9c4:	7e f4       	brtc	.+30     	; 0x9e4 <__addsf3x+0x80>
     9c6:	1f 16       	cp	r1, r31
     9c8:	ba 0b       	sbc	r27, r26
     9ca:	62 0b       	sbc	r22, r18
     9cc:	73 0b       	sbc	r23, r19
     9ce:	84 0b       	sbc	r24, r20
     9d0:	ba f0       	brmi	.+46     	; 0xa00 <__addsf3x+0x9c>
     9d2:	91 50       	subi	r25, 0x01	; 1
     9d4:	a1 f0       	breq	.+40     	; 0x9fe <__addsf3x+0x9a>
     9d6:	ff 0f       	add	r31, r31
     9d8:	bb 1f       	adc	r27, r27
     9da:	66 1f       	adc	r22, r22
     9dc:	77 1f       	adc	r23, r23
     9de:	88 1f       	adc	r24, r24
     9e0:	c2 f7       	brpl	.-16     	; 0x9d2 <__addsf3x+0x6e>
     9e2:	0e c0       	rjmp	.+28     	; 0xa00 <__addsf3x+0x9c>
     9e4:	ba 0f       	add	r27, r26
     9e6:	62 1f       	adc	r22, r18
     9e8:	73 1f       	adc	r23, r19
     9ea:	84 1f       	adc	r24, r20
     9ec:	48 f4       	brcc	.+18     	; 0xa00 <__addsf3x+0x9c>
     9ee:	87 95       	ror	r24
     9f0:	77 95       	ror	r23
     9f2:	67 95       	ror	r22
     9f4:	b7 95       	ror	r27
     9f6:	f7 95       	ror	r31
     9f8:	9e 3f       	cpi	r25, 0xFE	; 254
     9fa:	08 f0       	brcs	.+2      	; 0x9fe <__addsf3x+0x9a>
     9fc:	b0 cf       	rjmp	.-160    	; 0x95e <__addsf3+0x28>
     9fe:	93 95       	inc	r25
     a00:	88 0f       	add	r24, r24
     a02:	08 f0       	brcs	.+2      	; 0xa06 <__addsf3x+0xa2>
     a04:	99 27       	eor	r25, r25
     a06:	ee 0f       	add	r30, r30
     a08:	97 95       	ror	r25
     a0a:	87 95       	ror	r24
     a0c:	08 95       	ret
     a0e:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     a12:	60 f0       	brcs	.+24     	; 0xa2c <__addsf3x+0xc8>
     a14:	80 e8       	ldi	r24, 0x80	; 128
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	09 f4       	brne	.+2      	; 0xa1c <__addsf3x+0xb8>
     a1a:	9e ef       	ldi	r25, 0xFE	; 254
     a1c:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     a20:	28 f0       	brcs	.+10     	; 0xa2c <__addsf3x+0xc8>
     a22:	40 e8       	ldi	r20, 0x80	; 128
     a24:	51 e0       	ldi	r21, 0x01	; 1
     a26:	71 f4       	brne	.+28     	; 0xa44 <atan2+0x10>
     a28:	5e ef       	ldi	r21, 0xFE	; 254
     a2a:	0c c0       	rjmp	.+24     	; 0xa44 <atan2+0x10>
     a2c:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>
     a30:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_zero>

00000a34 <atan2>:
     a34:	e9 2f       	mov	r30, r25
     a36:	e0 78       	andi	r30, 0x80	; 128
     a38:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     a3c:	40 f3       	brcs	.-48     	; 0xa0e <__addsf3x+0xaa>
     a3e:	09 2e       	mov	r0, r25
     a40:	05 2a       	or	r0, r21
     a42:	b1 f3       	breq	.-20     	; 0xa30 <__addsf3x+0xcc>
     a44:	26 17       	cp	r18, r22
     a46:	37 07       	cpc	r19, r23
     a48:	48 07       	cpc	r20, r24
     a4a:	59 07       	cpc	r21, r25
     a4c:	38 f0       	brcs	.+14     	; 0xa5c <atan2+0x28>
     a4e:	0e 2e       	mov	r0, r30
     a50:	07 f8       	bld	r0, 7
     a52:	e0 25       	eor	r30, r0
     a54:	69 f0       	breq	.+26     	; 0xa70 <atan2+0x3c>
     a56:	e0 25       	eor	r30, r0
     a58:	e0 64       	ori	r30, 0x40	; 64
     a5a:	0a c0       	rjmp	.+20     	; 0xa70 <atan2+0x3c>
     a5c:	ef 63       	ori	r30, 0x3F	; 63
     a5e:	07 f8       	bld	r0, 7
     a60:	00 94       	com	r0
     a62:	07 fa       	bst	r0, 7
     a64:	db 01       	movw	r26, r22
     a66:	b9 01       	movw	r22, r18
     a68:	9d 01       	movw	r18, r26
     a6a:	dc 01       	movw	r26, r24
     a6c:	ca 01       	movw	r24, r20
     a6e:	ad 01       	movw	r20, r26
     a70:	ef 93       	push	r30
     a72:	0e 94 90 05 	call	0xb20	; 0xb20 <__divsf3_pse>
     a76:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_round>
     a7a:	0e 94 4a 05 	call	0xa94	; 0xa94 <atan>
     a7e:	5f 91       	pop	r21
     a80:	55 23       	and	r21, r21
     a82:	39 f0       	breq	.+14     	; 0xa92 <atan2+0x5e>
     a84:	2b ed       	ldi	r18, 0xDB	; 219
     a86:	3f e0       	ldi	r19, 0x0F	; 15
     a88:	49 e4       	ldi	r20, 0x49	; 73
     a8a:	50 fd       	sbrc	r21, 0
     a8c:	49 ec       	ldi	r20, 0xC9	; 201
     a8e:	0c 94 9b 04 	jmp	0x936	; 0x936 <__addsf3>
     a92:	08 95       	ret

00000a94 <atan>:
     a94:	df 93       	push	r29
     a96:	dd 27       	eor	r29, r29
     a98:	b9 2f       	mov	r27, r25
     a9a:	bf 77       	andi	r27, 0x7F	; 127
     a9c:	40 e8       	ldi	r20, 0x80	; 128
     a9e:	5f e3       	ldi	r21, 0x3F	; 63
     aa0:	16 16       	cp	r1, r22
     aa2:	17 06       	cpc	r1, r23
     aa4:	48 07       	cpc	r20, r24
     aa6:	5b 07       	cpc	r21, r27
     aa8:	18 f4       	brcc	.+6      	; 0xab0 <atan+0x1c>
     aaa:	d9 2f       	mov	r29, r25
     aac:	0e 94 d6 06 	call	0xdac	; 0xdac <inverse>
     ab0:	9f 93       	push	r25
     ab2:	8f 93       	push	r24
     ab4:	7f 93       	push	r23
     ab6:	6f 93       	push	r22
     ab8:	0e 94 4b 07 	call	0xe96	; 0xe96 <square>
     abc:	e4 eb       	ldi	r30, 0xB4	; 180
     abe:	f0 e0       	ldi	r31, 0x00	; 0
     ac0:	0e 94 67 06 	call	0xcce	; 0xcce <__fp_powser>
     ac4:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_round>
     ac8:	2f 91       	pop	r18
     aca:	3f 91       	pop	r19
     acc:	4f 91       	pop	r20
     ace:	5f 91       	pop	r21
     ad0:	0e 94 f1 06 	call	0xde2	; 0xde2 <__mulsf3x>
     ad4:	dd 23       	and	r29, r29
     ad6:	51 f0       	breq	.+20     	; 0xaec <atan+0x58>
     ad8:	90 58       	subi	r25, 0x80	; 128
     ada:	a2 ea       	ldi	r26, 0xA2	; 162
     adc:	2a ed       	ldi	r18, 0xDA	; 218
     ade:	3f e0       	ldi	r19, 0x0F	; 15
     ae0:	49 ec       	ldi	r20, 0xC9	; 201
     ae2:	5f e3       	ldi	r21, 0x3F	; 63
     ae4:	d0 78       	andi	r29, 0x80	; 128
     ae6:	5d 27       	eor	r21, r29
     ae8:	0e 94 b2 04 	call	0x964	; 0x964 <__addsf3x>
     aec:	df 91       	pop	r29
     aee:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>

00000af2 <__divsf3>:
     af2:	0e 94 8d 05 	call	0xb1a	; 0xb1a <__divsf3x>
     af6:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>
     afa:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     afe:	58 f0       	brcs	.+22     	; 0xb16 <__divsf3+0x24>
     b00:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     b04:	40 f0       	brcs	.+16     	; 0xb16 <__divsf3+0x24>
     b06:	29 f4       	brne	.+10     	; 0xb12 <__divsf3+0x20>
     b08:	5f 3f       	cpi	r21, 0xFF	; 255
     b0a:	29 f0       	breq	.+10     	; 0xb16 <__divsf3+0x24>
     b0c:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     b10:	51 11       	cpse	r21, r1
     b12:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     b16:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>

00000b1a <__divsf3x>:
     b1a:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     b1e:	68 f3       	brcs	.-38     	; 0xafa <__divsf3+0x8>

00000b20 <__divsf3_pse>:
     b20:	99 23       	and	r25, r25
     b22:	b1 f3       	breq	.-20     	; 0xb10 <__divsf3+0x1e>
     b24:	55 23       	and	r21, r21
     b26:	91 f3       	breq	.-28     	; 0xb0c <__divsf3+0x1a>
     b28:	95 1b       	sub	r25, r21
     b2a:	55 0b       	sbc	r21, r21
     b2c:	bb 27       	eor	r27, r27
     b2e:	aa 27       	eor	r26, r26
     b30:	62 17       	cp	r22, r18
     b32:	73 07       	cpc	r23, r19
     b34:	84 07       	cpc	r24, r20
     b36:	38 f0       	brcs	.+14     	; 0xb46 <__divsf3_pse+0x26>
     b38:	9f 5f       	subi	r25, 0xFF	; 255
     b3a:	5f 4f       	sbci	r21, 0xFF	; 255
     b3c:	22 0f       	add	r18, r18
     b3e:	33 1f       	adc	r19, r19
     b40:	44 1f       	adc	r20, r20
     b42:	aa 1f       	adc	r26, r26
     b44:	a9 f3       	breq	.-22     	; 0xb30 <__divsf3_pse+0x10>
     b46:	35 d0       	rcall	.+106    	; 0xbb2 <__divsf3_pse+0x92>
     b48:	0e 2e       	mov	r0, r30
     b4a:	3a f0       	brmi	.+14     	; 0xb5a <__divsf3_pse+0x3a>
     b4c:	e0 e8       	ldi	r30, 0x80	; 128
     b4e:	32 d0       	rcall	.+100    	; 0xbb4 <__divsf3_pse+0x94>
     b50:	91 50       	subi	r25, 0x01	; 1
     b52:	50 40       	sbci	r21, 0x00	; 0
     b54:	e6 95       	lsr	r30
     b56:	00 1c       	adc	r0, r0
     b58:	ca f7       	brpl	.-14     	; 0xb4c <__divsf3_pse+0x2c>
     b5a:	2b d0       	rcall	.+86     	; 0xbb2 <__divsf3_pse+0x92>
     b5c:	fe 2f       	mov	r31, r30
     b5e:	29 d0       	rcall	.+82     	; 0xbb2 <__divsf3_pse+0x92>
     b60:	66 0f       	add	r22, r22
     b62:	77 1f       	adc	r23, r23
     b64:	88 1f       	adc	r24, r24
     b66:	bb 1f       	adc	r27, r27
     b68:	26 17       	cp	r18, r22
     b6a:	37 07       	cpc	r19, r23
     b6c:	48 07       	cpc	r20, r24
     b6e:	ab 07       	cpc	r26, r27
     b70:	b0 e8       	ldi	r27, 0x80	; 128
     b72:	09 f0       	breq	.+2      	; 0xb76 <__divsf3_pse+0x56>
     b74:	bb 0b       	sbc	r27, r27
     b76:	80 2d       	mov	r24, r0
     b78:	bf 01       	movw	r22, r30
     b7a:	ff 27       	eor	r31, r31
     b7c:	93 58       	subi	r25, 0x83	; 131
     b7e:	5f 4f       	sbci	r21, 0xFF	; 255
     b80:	3a f0       	brmi	.+14     	; 0xb90 <__divsf3_pse+0x70>
     b82:	9e 3f       	cpi	r25, 0xFE	; 254
     b84:	51 05       	cpc	r21, r1
     b86:	78 f0       	brcs	.+30     	; 0xba6 <__divsf3_pse+0x86>
     b88:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     b8c:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     b90:	5f 3f       	cpi	r21, 0xFF	; 255
     b92:	e4 f3       	brlt	.-8      	; 0xb8c <__divsf3_pse+0x6c>
     b94:	98 3e       	cpi	r25, 0xE8	; 232
     b96:	d4 f3       	brlt	.-12     	; 0xb8c <__divsf3_pse+0x6c>
     b98:	86 95       	lsr	r24
     b9a:	77 95       	ror	r23
     b9c:	67 95       	ror	r22
     b9e:	b7 95       	ror	r27
     ba0:	f7 95       	ror	r31
     ba2:	9f 5f       	subi	r25, 0xFF	; 255
     ba4:	c9 f7       	brne	.-14     	; 0xb98 <__divsf3_pse+0x78>
     ba6:	88 0f       	add	r24, r24
     ba8:	91 1d       	adc	r25, r1
     baa:	96 95       	lsr	r25
     bac:	87 95       	ror	r24
     bae:	97 f9       	bld	r25, 7
     bb0:	08 95       	ret
     bb2:	e1 e0       	ldi	r30, 0x01	; 1
     bb4:	66 0f       	add	r22, r22
     bb6:	77 1f       	adc	r23, r23
     bb8:	88 1f       	adc	r24, r24
     bba:	bb 1f       	adc	r27, r27
     bbc:	62 17       	cp	r22, r18
     bbe:	73 07       	cpc	r23, r19
     bc0:	84 07       	cpc	r24, r20
     bc2:	ba 07       	cpc	r27, r26
     bc4:	20 f0       	brcs	.+8      	; 0xbce <__divsf3_pse+0xae>
     bc6:	62 1b       	sub	r22, r18
     bc8:	73 0b       	sbc	r23, r19
     bca:	84 0b       	sbc	r24, r20
     bcc:	ba 0b       	sbc	r27, r26
     bce:	ee 1f       	adc	r30, r30
     bd0:	88 f7       	brcc	.-30     	; 0xbb4 <__divsf3_pse+0x94>
     bd2:	e0 95       	com	r30
     bd4:	08 95       	ret

00000bd6 <__fixsfsi>:
     bd6:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__fixunssfsi>
     bda:	68 94       	set
     bdc:	b1 11       	cpse	r27, r1
     bde:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     be2:	08 95       	ret

00000be4 <__fixunssfsi>:
     be4:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fp_splitA>
     be8:	88 f0       	brcs	.+34     	; 0xc0c <__fixunssfsi+0x28>
     bea:	9f 57       	subi	r25, 0x7F	; 127
     bec:	98 f0       	brcs	.+38     	; 0xc14 <__fixunssfsi+0x30>
     bee:	b9 2f       	mov	r27, r25
     bf0:	99 27       	eor	r25, r25
     bf2:	b7 51       	subi	r27, 0x17	; 23
     bf4:	b0 f0       	brcs	.+44     	; 0xc22 <__fixunssfsi+0x3e>
     bf6:	e1 f0       	breq	.+56     	; 0xc30 <__fixunssfsi+0x4c>
     bf8:	66 0f       	add	r22, r22
     bfa:	77 1f       	adc	r23, r23
     bfc:	88 1f       	adc	r24, r24
     bfe:	99 1f       	adc	r25, r25
     c00:	1a f0       	brmi	.+6      	; 0xc08 <__fixunssfsi+0x24>
     c02:	ba 95       	dec	r27
     c04:	c9 f7       	brne	.-14     	; 0xbf8 <__fixunssfsi+0x14>
     c06:	14 c0       	rjmp	.+40     	; 0xc30 <__fixunssfsi+0x4c>
     c08:	b1 30       	cpi	r27, 0x01	; 1
     c0a:	91 f0       	breq	.+36     	; 0xc30 <__fixunssfsi+0x4c>
     c0c:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__fp_zero>
     c10:	b1 e0       	ldi	r27, 0x01	; 1
     c12:	08 95       	ret
     c14:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_zero>
     c18:	67 2f       	mov	r22, r23
     c1a:	78 2f       	mov	r23, r24
     c1c:	88 27       	eor	r24, r24
     c1e:	b8 5f       	subi	r27, 0xF8	; 248
     c20:	39 f0       	breq	.+14     	; 0xc30 <__fixunssfsi+0x4c>
     c22:	b9 3f       	cpi	r27, 0xF9	; 249
     c24:	cc f3       	brlt	.-14     	; 0xc18 <__fixunssfsi+0x34>
     c26:	86 95       	lsr	r24
     c28:	77 95       	ror	r23
     c2a:	67 95       	ror	r22
     c2c:	b3 95       	inc	r27
     c2e:	d9 f7       	brne	.-10     	; 0xc26 <__fixunssfsi+0x42>
     c30:	3e f4       	brtc	.+14     	; 0xc40 <__fixunssfsi+0x5c>
     c32:	90 95       	com	r25
     c34:	80 95       	com	r24
     c36:	70 95       	com	r23
     c38:	61 95       	neg	r22
     c3a:	7f 4f       	sbci	r23, 0xFF	; 255
     c3c:	8f 4f       	sbci	r24, 0xFF	; 255
     c3e:	9f 4f       	sbci	r25, 0xFF	; 255
     c40:	08 95       	ret

00000c42 <__floatunsisf>:
     c42:	e8 94       	clt
     c44:	09 c0       	rjmp	.+18     	; 0xc58 <__floatsisf+0x12>

00000c46 <__floatsisf>:
     c46:	97 fb       	bst	r25, 7
     c48:	3e f4       	brtc	.+14     	; 0xc58 <__floatsisf+0x12>
     c4a:	90 95       	com	r25
     c4c:	80 95       	com	r24
     c4e:	70 95       	com	r23
     c50:	61 95       	neg	r22
     c52:	7f 4f       	sbci	r23, 0xFF	; 255
     c54:	8f 4f       	sbci	r24, 0xFF	; 255
     c56:	9f 4f       	sbci	r25, 0xFF	; 255
     c58:	99 23       	and	r25, r25
     c5a:	a9 f0       	breq	.+42     	; 0xc86 <__floatsisf+0x40>
     c5c:	f9 2f       	mov	r31, r25
     c5e:	96 e9       	ldi	r25, 0x96	; 150
     c60:	bb 27       	eor	r27, r27
     c62:	93 95       	inc	r25
     c64:	f6 95       	lsr	r31
     c66:	87 95       	ror	r24
     c68:	77 95       	ror	r23
     c6a:	67 95       	ror	r22
     c6c:	b7 95       	ror	r27
     c6e:	f1 11       	cpse	r31, r1
     c70:	f8 cf       	rjmp	.-16     	; 0xc62 <__floatsisf+0x1c>
     c72:	fa f4       	brpl	.+62     	; 0xcb2 <__floatsisf+0x6c>
     c74:	bb 0f       	add	r27, r27
     c76:	11 f4       	brne	.+4      	; 0xc7c <__floatsisf+0x36>
     c78:	60 ff       	sbrs	r22, 0
     c7a:	1b c0       	rjmp	.+54     	; 0xcb2 <__floatsisf+0x6c>
     c7c:	6f 5f       	subi	r22, 0xFF	; 255
     c7e:	7f 4f       	sbci	r23, 0xFF	; 255
     c80:	8f 4f       	sbci	r24, 0xFF	; 255
     c82:	9f 4f       	sbci	r25, 0xFF	; 255
     c84:	16 c0       	rjmp	.+44     	; 0xcb2 <__floatsisf+0x6c>
     c86:	88 23       	and	r24, r24
     c88:	11 f0       	breq	.+4      	; 0xc8e <__floatsisf+0x48>
     c8a:	96 e9       	ldi	r25, 0x96	; 150
     c8c:	11 c0       	rjmp	.+34     	; 0xcb0 <__floatsisf+0x6a>
     c8e:	77 23       	and	r23, r23
     c90:	21 f0       	breq	.+8      	; 0xc9a <__floatsisf+0x54>
     c92:	9e e8       	ldi	r25, 0x8E	; 142
     c94:	87 2f       	mov	r24, r23
     c96:	76 2f       	mov	r23, r22
     c98:	05 c0       	rjmp	.+10     	; 0xca4 <__floatsisf+0x5e>
     c9a:	66 23       	and	r22, r22
     c9c:	71 f0       	breq	.+28     	; 0xcba <__floatsisf+0x74>
     c9e:	96 e8       	ldi	r25, 0x86	; 134
     ca0:	86 2f       	mov	r24, r22
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	2a f0       	brmi	.+10     	; 0xcb2 <__floatsisf+0x6c>
     ca8:	9a 95       	dec	r25
     caa:	66 0f       	add	r22, r22
     cac:	77 1f       	adc	r23, r23
     cae:	88 1f       	adc	r24, r24
     cb0:	da f7       	brpl	.-10     	; 0xca8 <__floatsisf+0x62>
     cb2:	88 0f       	add	r24, r24
     cb4:	96 95       	lsr	r25
     cb6:	87 95       	ror	r24
     cb8:	97 f9       	bld	r25, 7
     cba:	08 95       	ret

00000cbc <__fp_inf>:
     cbc:	97 f9       	bld	r25, 7
     cbe:	9f 67       	ori	r25, 0x7F	; 127
     cc0:	80 e8       	ldi	r24, 0x80	; 128
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	08 95       	ret

00000cc8 <__fp_nan>:
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	80 ec       	ldi	r24, 0xC0	; 192
     ccc:	08 95       	ret

00000cce <__fp_powser>:
     cce:	df 93       	push	r29
     cd0:	cf 93       	push	r28
     cd2:	1f 93       	push	r17
     cd4:	0f 93       	push	r16
     cd6:	ff 92       	push	r15
     cd8:	ef 92       	push	r14
     cda:	df 92       	push	r13
     cdc:	7b 01       	movw	r14, r22
     cde:	8c 01       	movw	r16, r24
     ce0:	68 94       	set
     ce2:	06 c0       	rjmp	.+12     	; 0xcf0 <__fp_powser+0x22>
     ce4:	da 2e       	mov	r13, r26
     ce6:	ef 01       	movw	r28, r30
     ce8:	0e 94 f1 06 	call	0xde2	; 0xde2 <__mulsf3x>
     cec:	fe 01       	movw	r30, r28
     cee:	e8 94       	clt
     cf0:	a5 91       	lpm	r26, Z+
     cf2:	25 91       	lpm	r18, Z+
     cf4:	35 91       	lpm	r19, Z+
     cf6:	45 91       	lpm	r20, Z+
     cf8:	55 91       	lpm	r21, Z+
     cfa:	a6 f3       	brts	.-24     	; 0xce4 <__fp_powser+0x16>
     cfc:	ef 01       	movw	r28, r30
     cfe:	0e 94 b2 04 	call	0x964	; 0x964 <__addsf3x>
     d02:	fe 01       	movw	r30, r28
     d04:	97 01       	movw	r18, r14
     d06:	a8 01       	movw	r20, r16
     d08:	da 94       	dec	r13
     d0a:	69 f7       	brne	.-38     	; 0xce6 <__fp_powser+0x18>
     d0c:	df 90       	pop	r13
     d0e:	ef 90       	pop	r14
     d10:	ff 90       	pop	r15
     d12:	0f 91       	pop	r16
     d14:	1f 91       	pop	r17
     d16:	cf 91       	pop	r28
     d18:	df 91       	pop	r29
     d1a:	08 95       	ret

00000d1c <__fp_pscA>:
     d1c:	00 24       	eor	r0, r0
     d1e:	0a 94       	dec	r0
     d20:	16 16       	cp	r1, r22
     d22:	17 06       	cpc	r1, r23
     d24:	18 06       	cpc	r1, r24
     d26:	09 06       	cpc	r0, r25
     d28:	08 95       	ret

00000d2a <__fp_pscB>:
     d2a:	00 24       	eor	r0, r0
     d2c:	0a 94       	dec	r0
     d2e:	12 16       	cp	r1, r18
     d30:	13 06       	cpc	r1, r19
     d32:	14 06       	cpc	r1, r20
     d34:	05 06       	cpc	r0, r21
     d36:	08 95       	ret

00000d38 <__fp_round>:
     d38:	09 2e       	mov	r0, r25
     d3a:	03 94       	inc	r0
     d3c:	00 0c       	add	r0, r0
     d3e:	11 f4       	brne	.+4      	; 0xd44 <__fp_round+0xc>
     d40:	88 23       	and	r24, r24
     d42:	52 f0       	brmi	.+20     	; 0xd58 <__fp_round+0x20>
     d44:	bb 0f       	add	r27, r27
     d46:	40 f4       	brcc	.+16     	; 0xd58 <__fp_round+0x20>
     d48:	bf 2b       	or	r27, r31
     d4a:	11 f4       	brne	.+4      	; 0xd50 <__fp_round+0x18>
     d4c:	60 ff       	sbrs	r22, 0
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <__fp_round+0x20>
     d50:	6f 5f       	subi	r22, 0xFF	; 255
     d52:	7f 4f       	sbci	r23, 0xFF	; 255
     d54:	8f 4f       	sbci	r24, 0xFF	; 255
     d56:	9f 4f       	sbci	r25, 0xFF	; 255
     d58:	08 95       	ret

00000d5a <__fp_split3>:
     d5a:	57 fd       	sbrc	r21, 7
     d5c:	90 58       	subi	r25, 0x80	; 128
     d5e:	44 0f       	add	r20, r20
     d60:	55 1f       	adc	r21, r21
     d62:	59 f0       	breq	.+22     	; 0xd7a <__fp_splitA+0x10>
     d64:	5f 3f       	cpi	r21, 0xFF	; 255
     d66:	71 f0       	breq	.+28     	; 0xd84 <__fp_splitA+0x1a>
     d68:	47 95       	ror	r20

00000d6a <__fp_splitA>:
     d6a:	88 0f       	add	r24, r24
     d6c:	97 fb       	bst	r25, 7
     d6e:	99 1f       	adc	r25, r25
     d70:	61 f0       	breq	.+24     	; 0xd8a <__fp_splitA+0x20>
     d72:	9f 3f       	cpi	r25, 0xFF	; 255
     d74:	79 f0       	breq	.+30     	; 0xd94 <__fp_splitA+0x2a>
     d76:	87 95       	ror	r24
     d78:	08 95       	ret
     d7a:	12 16       	cp	r1, r18
     d7c:	13 06       	cpc	r1, r19
     d7e:	14 06       	cpc	r1, r20
     d80:	55 1f       	adc	r21, r21
     d82:	f2 cf       	rjmp	.-28     	; 0xd68 <__fp_split3+0xe>
     d84:	46 95       	lsr	r20
     d86:	f1 df       	rcall	.-30     	; 0xd6a <__fp_splitA>
     d88:	08 c0       	rjmp	.+16     	; 0xd9a <__fp_splitA+0x30>
     d8a:	16 16       	cp	r1, r22
     d8c:	17 06       	cpc	r1, r23
     d8e:	18 06       	cpc	r1, r24
     d90:	99 1f       	adc	r25, r25
     d92:	f1 cf       	rjmp	.-30     	; 0xd76 <__fp_splitA+0xc>
     d94:	86 95       	lsr	r24
     d96:	71 05       	cpc	r23, r1
     d98:	61 05       	cpc	r22, r1
     d9a:	08 94       	sec
     d9c:	08 95       	ret

00000d9e <__fp_zero>:
     d9e:	e8 94       	clt

00000da0 <__fp_szero>:
     da0:	bb 27       	eor	r27, r27
     da2:	66 27       	eor	r22, r22
     da4:	77 27       	eor	r23, r23
     da6:	cb 01       	movw	r24, r22
     da8:	97 f9       	bld	r25, 7
     daa:	08 95       	ret

00000dac <inverse>:
     dac:	9b 01       	movw	r18, r22
     dae:	ac 01       	movw	r20, r24
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	80 e8       	ldi	r24, 0x80	; 128
     db6:	9f e3       	ldi	r25, 0x3F	; 63
     db8:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__divsf3>

00000dbc <__mulsf3>:
     dbc:	0e 94 f1 06 	call	0xde2	; 0xde2 <__mulsf3x>
     dc0:	0c 94 9c 06 	jmp	0xd38	; 0xd38 <__fp_round>
     dc4:	0e 94 8e 06 	call	0xd1c	; 0xd1c <__fp_pscA>
     dc8:	38 f0       	brcs	.+14     	; 0xdd8 <__mulsf3+0x1c>
     dca:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscB>
     dce:	20 f0       	brcs	.+8      	; 0xdd8 <__mulsf3+0x1c>
     dd0:	95 23       	and	r25, r21
     dd2:	11 f0       	breq	.+4      	; 0xdd8 <__mulsf3+0x1c>
     dd4:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     dd8:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_nan>
     ddc:	11 24       	eor	r1, r1
     dde:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>

00000de2 <__mulsf3x>:
     de2:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_split3>
     de6:	70 f3       	brcs	.-36     	; 0xdc4 <__mulsf3+0x8>

00000de8 <__mulsf3_pse>:
     de8:	95 9f       	mul	r25, r21
     dea:	c1 f3       	breq	.-16     	; 0xddc <__mulsf3+0x20>
     dec:	95 0f       	add	r25, r21
     dee:	50 e0       	ldi	r21, 0x00	; 0
     df0:	55 1f       	adc	r21, r21
     df2:	62 9f       	mul	r22, r18
     df4:	f0 01       	movw	r30, r0
     df6:	72 9f       	mul	r23, r18
     df8:	bb 27       	eor	r27, r27
     dfa:	f0 0d       	add	r31, r0
     dfc:	b1 1d       	adc	r27, r1
     dfe:	63 9f       	mul	r22, r19
     e00:	aa 27       	eor	r26, r26
     e02:	f0 0d       	add	r31, r0
     e04:	b1 1d       	adc	r27, r1
     e06:	aa 1f       	adc	r26, r26
     e08:	64 9f       	mul	r22, r20
     e0a:	66 27       	eor	r22, r22
     e0c:	b0 0d       	add	r27, r0
     e0e:	a1 1d       	adc	r26, r1
     e10:	66 1f       	adc	r22, r22
     e12:	82 9f       	mul	r24, r18
     e14:	22 27       	eor	r18, r18
     e16:	b0 0d       	add	r27, r0
     e18:	a1 1d       	adc	r26, r1
     e1a:	62 1f       	adc	r22, r18
     e1c:	73 9f       	mul	r23, r19
     e1e:	b0 0d       	add	r27, r0
     e20:	a1 1d       	adc	r26, r1
     e22:	62 1f       	adc	r22, r18
     e24:	83 9f       	mul	r24, r19
     e26:	a0 0d       	add	r26, r0
     e28:	61 1d       	adc	r22, r1
     e2a:	22 1f       	adc	r18, r18
     e2c:	74 9f       	mul	r23, r20
     e2e:	33 27       	eor	r19, r19
     e30:	a0 0d       	add	r26, r0
     e32:	61 1d       	adc	r22, r1
     e34:	23 1f       	adc	r18, r19
     e36:	84 9f       	mul	r24, r20
     e38:	60 0d       	add	r22, r0
     e3a:	21 1d       	adc	r18, r1
     e3c:	82 2f       	mov	r24, r18
     e3e:	76 2f       	mov	r23, r22
     e40:	6a 2f       	mov	r22, r26
     e42:	11 24       	eor	r1, r1
     e44:	9f 57       	subi	r25, 0x7F	; 127
     e46:	50 40       	sbci	r21, 0x00	; 0
     e48:	9a f0       	brmi	.+38     	; 0xe70 <__mulsf3_pse+0x88>
     e4a:	f1 f0       	breq	.+60     	; 0xe88 <__mulsf3_pse+0xa0>
     e4c:	88 23       	and	r24, r24
     e4e:	4a f0       	brmi	.+18     	; 0xe62 <__mulsf3_pse+0x7a>
     e50:	ee 0f       	add	r30, r30
     e52:	ff 1f       	adc	r31, r31
     e54:	bb 1f       	adc	r27, r27
     e56:	66 1f       	adc	r22, r22
     e58:	77 1f       	adc	r23, r23
     e5a:	88 1f       	adc	r24, r24
     e5c:	91 50       	subi	r25, 0x01	; 1
     e5e:	50 40       	sbci	r21, 0x00	; 0
     e60:	a9 f7       	brne	.-22     	; 0xe4c <__mulsf3_pse+0x64>
     e62:	9e 3f       	cpi	r25, 0xFE	; 254
     e64:	51 05       	cpc	r21, r1
     e66:	80 f0       	brcs	.+32     	; 0xe88 <__mulsf3_pse+0xa0>
     e68:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__fp_inf>
     e6c:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__fp_szero>
     e70:	5f 3f       	cpi	r21, 0xFF	; 255
     e72:	e4 f3       	brlt	.-8      	; 0xe6c <__mulsf3_pse+0x84>
     e74:	98 3e       	cpi	r25, 0xE8	; 232
     e76:	d4 f3       	brlt	.-12     	; 0xe6c <__mulsf3_pse+0x84>
     e78:	86 95       	lsr	r24
     e7a:	77 95       	ror	r23
     e7c:	67 95       	ror	r22
     e7e:	b7 95       	ror	r27
     e80:	f7 95       	ror	r31
     e82:	e7 95       	ror	r30
     e84:	9f 5f       	subi	r25, 0xFF	; 255
     e86:	c1 f7       	brne	.-16     	; 0xe78 <__mulsf3_pse+0x90>
     e88:	fe 2b       	or	r31, r30
     e8a:	88 0f       	add	r24, r24
     e8c:	91 1d       	adc	r25, r1
     e8e:	96 95       	lsr	r25
     e90:	87 95       	ror	r24
     e92:	97 f9       	bld	r25, 7
     e94:	08 95       	ret

00000e96 <square>:
     e96:	9b 01       	movw	r18, r22
     e98:	ac 01       	movw	r20, r24
     e9a:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__mulsf3>

00000e9e <__udivmodsi4>:
     e9e:	a1 e2       	ldi	r26, 0x21	; 33
     ea0:	1a 2e       	mov	r1, r26
     ea2:	aa 1b       	sub	r26, r26
     ea4:	bb 1b       	sub	r27, r27
     ea6:	fd 01       	movw	r30, r26
     ea8:	0d c0       	rjmp	.+26     	; 0xec4 <__udivmodsi4_ep>

00000eaa <__udivmodsi4_loop>:
     eaa:	aa 1f       	adc	r26, r26
     eac:	bb 1f       	adc	r27, r27
     eae:	ee 1f       	adc	r30, r30
     eb0:	ff 1f       	adc	r31, r31
     eb2:	a2 17       	cp	r26, r18
     eb4:	b3 07       	cpc	r27, r19
     eb6:	e4 07       	cpc	r30, r20
     eb8:	f5 07       	cpc	r31, r21
     eba:	20 f0       	brcs	.+8      	; 0xec4 <__udivmodsi4_ep>
     ebc:	a2 1b       	sub	r26, r18
     ebe:	b3 0b       	sbc	r27, r19
     ec0:	e4 0b       	sbc	r30, r20
     ec2:	f5 0b       	sbc	r31, r21

00000ec4 <__udivmodsi4_ep>:
     ec4:	66 1f       	adc	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	99 1f       	adc	r25, r25
     ecc:	1a 94       	dec	r1
     ece:	69 f7       	brne	.-38     	; 0xeaa <__udivmodsi4_loop>
     ed0:	60 95       	com	r22
     ed2:	70 95       	com	r23
     ed4:	80 95       	com	r24
     ed6:	90 95       	com	r25
     ed8:	9b 01       	movw	r18, r22
     eda:	ac 01       	movw	r20, r24
     edc:	bd 01       	movw	r22, r26
     ede:	cf 01       	movw	r24, r30
     ee0:	08 95       	ret

00000ee2 <dtostrf>:
     ee2:	ef 92       	push	r14
     ee4:	0f 93       	push	r16
     ee6:	1f 93       	push	r17
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
     eec:	e8 01       	movw	r28, r16
     eee:	47 fd       	sbrc	r20, 7
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <dtostrf+0x14>
     ef2:	34 e0       	ldi	r19, 0x04	; 4
     ef4:	01 c0       	rjmp	.+2      	; 0xef8 <dtostrf+0x16>
     ef6:	34 e1       	ldi	r19, 0x14	; 20
     ef8:	04 2e       	mov	r0, r20
     efa:	00 0c       	add	r0, r0
     efc:	55 0b       	sbc	r21, r21
     efe:	57 ff       	sbrs	r21, 7
     f00:	03 c0       	rjmp	.+6      	; 0xf08 <dtostrf+0x26>
     f02:	51 95       	neg	r21
     f04:	41 95       	neg	r20
     f06:	51 09       	sbc	r21, r1
     f08:	e3 2e       	mov	r14, r19
     f0a:	02 2f       	mov	r16, r18
     f0c:	24 2f       	mov	r18, r20
     f0e:	ae 01       	movw	r20, r28
     f10:	0e 94 94 09 	call	0x1328	; 0x1328 <dtoa_prf>
     f14:	ce 01       	movw	r24, r28
     f16:	df 91       	pop	r29
     f18:	cf 91       	pop	r28
     f1a:	1f 91       	pop	r17
     f1c:	0f 91       	pop	r16
     f1e:	ef 90       	pop	r14
     f20:	08 95       	ret

00000f22 <sprintf>:
     f22:	ae e0       	ldi	r26, 0x0E	; 14
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	e7 e9       	ldi	r30, 0x97	; 151
     f28:	f7 e0       	ldi	r31, 0x07	; 7
     f2a:	0c 94 84 0c 	jmp	0x1908	; 0x1908 <__prologue_saves__+0x1c>
     f2e:	0d 89       	ldd	r16, Y+21	; 0x15
     f30:	1e 89       	ldd	r17, Y+22	; 0x16
     f32:	86 e0       	ldi	r24, 0x06	; 6
     f34:	8c 83       	std	Y+4, r24	; 0x04
     f36:	1a 83       	std	Y+2, r17	; 0x02
     f38:	09 83       	std	Y+1, r16	; 0x01
     f3a:	8f ef       	ldi	r24, 0xFF	; 255
     f3c:	9f e7       	ldi	r25, 0x7F	; 127
     f3e:	9e 83       	std	Y+6, r25	; 0x06
     f40:	8d 83       	std	Y+5, r24	; 0x05
     f42:	ae 01       	movw	r20, r28
     f44:	47 5e       	subi	r20, 0xE7	; 231
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	6f 89       	ldd	r22, Y+23	; 0x17
     f4a:	78 8d       	ldd	r23, Y+24	; 0x18
     f4c:	ce 01       	movw	r24, r28
     f4e:	01 96       	adiw	r24, 0x01	; 1
     f50:	0e 94 b3 07 	call	0xf66	; 0xf66 <vfprintf>
     f54:	ef 81       	ldd	r30, Y+7	; 0x07
     f56:	f8 85       	ldd	r31, Y+8	; 0x08
     f58:	e0 0f       	add	r30, r16
     f5a:	f1 1f       	adc	r31, r17
     f5c:	10 82       	st	Z, r1
     f5e:	2e 96       	adiw	r28, 0x0e	; 14
     f60:	e4 e0       	ldi	r30, 0x04	; 4
     f62:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__epilogue_restores__+0x1c>

00000f66 <vfprintf>:
     f66:	ab e0       	ldi	r26, 0x0B	; 11
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	e9 eb       	ldi	r30, 0xB9	; 185
     f6c:	f7 e0       	ldi	r31, 0x07	; 7
     f6e:	0c 94 76 0c 	jmp	0x18ec	; 0x18ec <__prologue_saves__>
     f72:	6c 01       	movw	r12, r24
     f74:	7b 01       	movw	r14, r22
     f76:	8a 01       	movw	r16, r20
     f78:	fc 01       	movw	r30, r24
     f7a:	17 82       	std	Z+7, r1	; 0x07
     f7c:	16 82       	std	Z+6, r1	; 0x06
     f7e:	83 81       	ldd	r24, Z+3	; 0x03
     f80:	81 ff       	sbrs	r24, 1
     f82:	cc c1       	rjmp	.+920    	; 0x131c <vfprintf+0x3b6>
     f84:	ce 01       	movw	r24, r28
     f86:	01 96       	adiw	r24, 0x01	; 1
     f88:	3c 01       	movw	r6, r24
     f8a:	f6 01       	movw	r30, r12
     f8c:	93 81       	ldd	r25, Z+3	; 0x03
     f8e:	f7 01       	movw	r30, r14
     f90:	93 fd       	sbrc	r25, 3
     f92:	85 91       	lpm	r24, Z+
     f94:	93 ff       	sbrs	r25, 3
     f96:	81 91       	ld	r24, Z+
     f98:	7f 01       	movw	r14, r30
     f9a:	88 23       	and	r24, r24
     f9c:	09 f4       	brne	.+2      	; 0xfa0 <vfprintf+0x3a>
     f9e:	ba c1       	rjmp	.+884    	; 0x1314 <vfprintf+0x3ae>
     fa0:	85 32       	cpi	r24, 0x25	; 37
     fa2:	39 f4       	brne	.+14     	; 0xfb2 <vfprintf+0x4c>
     fa4:	93 fd       	sbrc	r25, 3
     fa6:	85 91       	lpm	r24, Z+
     fa8:	93 ff       	sbrs	r25, 3
     faa:	81 91       	ld	r24, Z+
     fac:	7f 01       	movw	r14, r30
     fae:	85 32       	cpi	r24, 0x25	; 37
     fb0:	29 f4       	brne	.+10     	; 0xfbc <vfprintf+0x56>
     fb2:	b6 01       	movw	r22, r12
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
     fba:	e7 cf       	rjmp	.-50     	; 0xf8a <vfprintf+0x24>
     fbc:	91 2c       	mov	r9, r1
     fbe:	21 2c       	mov	r2, r1
     fc0:	31 2c       	mov	r3, r1
     fc2:	ff e1       	ldi	r31, 0x1F	; 31
     fc4:	f3 15       	cp	r31, r3
     fc6:	d8 f0       	brcs	.+54     	; 0xffe <vfprintf+0x98>
     fc8:	8b 32       	cpi	r24, 0x2B	; 43
     fca:	79 f0       	breq	.+30     	; 0xfea <vfprintf+0x84>
     fcc:	38 f4       	brcc	.+14     	; 0xfdc <vfprintf+0x76>
     fce:	80 32       	cpi	r24, 0x20	; 32
     fd0:	79 f0       	breq	.+30     	; 0xff0 <vfprintf+0x8a>
     fd2:	83 32       	cpi	r24, 0x23	; 35
     fd4:	a1 f4       	brne	.+40     	; 0xffe <vfprintf+0x98>
     fd6:	23 2d       	mov	r18, r3
     fd8:	20 61       	ori	r18, 0x10	; 16
     fda:	1d c0       	rjmp	.+58     	; 0x1016 <vfprintf+0xb0>
     fdc:	8d 32       	cpi	r24, 0x2D	; 45
     fde:	61 f0       	breq	.+24     	; 0xff8 <vfprintf+0x92>
     fe0:	80 33       	cpi	r24, 0x30	; 48
     fe2:	69 f4       	brne	.+26     	; 0xffe <vfprintf+0x98>
     fe4:	23 2d       	mov	r18, r3
     fe6:	21 60       	ori	r18, 0x01	; 1
     fe8:	16 c0       	rjmp	.+44     	; 0x1016 <vfprintf+0xb0>
     fea:	83 2d       	mov	r24, r3
     fec:	82 60       	ori	r24, 0x02	; 2
     fee:	38 2e       	mov	r3, r24
     ff0:	e3 2d       	mov	r30, r3
     ff2:	e4 60       	ori	r30, 0x04	; 4
     ff4:	3e 2e       	mov	r3, r30
     ff6:	2a c0       	rjmp	.+84     	; 0x104c <vfprintf+0xe6>
     ff8:	f3 2d       	mov	r31, r3
     ffa:	f8 60       	ori	r31, 0x08	; 8
     ffc:	1d c0       	rjmp	.+58     	; 0x1038 <vfprintf+0xd2>
     ffe:	37 fc       	sbrc	r3, 7
    1000:	2d c0       	rjmp	.+90     	; 0x105c <vfprintf+0xf6>
    1002:	20 ed       	ldi	r18, 0xD0	; 208
    1004:	28 0f       	add	r18, r24
    1006:	2a 30       	cpi	r18, 0x0A	; 10
    1008:	40 f0       	brcs	.+16     	; 0x101a <vfprintf+0xb4>
    100a:	8e 32       	cpi	r24, 0x2E	; 46
    100c:	b9 f4       	brne	.+46     	; 0x103c <vfprintf+0xd6>
    100e:	36 fc       	sbrc	r3, 6
    1010:	81 c1       	rjmp	.+770    	; 0x1314 <vfprintf+0x3ae>
    1012:	23 2d       	mov	r18, r3
    1014:	20 64       	ori	r18, 0x40	; 64
    1016:	32 2e       	mov	r3, r18
    1018:	19 c0       	rjmp	.+50     	; 0x104c <vfprintf+0xe6>
    101a:	36 fe       	sbrs	r3, 6
    101c:	06 c0       	rjmp	.+12     	; 0x102a <vfprintf+0xc4>
    101e:	8a e0       	ldi	r24, 0x0A	; 10
    1020:	98 9e       	mul	r9, r24
    1022:	20 0d       	add	r18, r0
    1024:	11 24       	eor	r1, r1
    1026:	92 2e       	mov	r9, r18
    1028:	11 c0       	rjmp	.+34     	; 0x104c <vfprintf+0xe6>
    102a:	ea e0       	ldi	r30, 0x0A	; 10
    102c:	2e 9e       	mul	r2, r30
    102e:	20 0d       	add	r18, r0
    1030:	11 24       	eor	r1, r1
    1032:	22 2e       	mov	r2, r18
    1034:	f3 2d       	mov	r31, r3
    1036:	f0 62       	ori	r31, 0x20	; 32
    1038:	3f 2e       	mov	r3, r31
    103a:	08 c0       	rjmp	.+16     	; 0x104c <vfprintf+0xe6>
    103c:	8c 36       	cpi	r24, 0x6C	; 108
    103e:	21 f4       	brne	.+8      	; 0x1048 <vfprintf+0xe2>
    1040:	83 2d       	mov	r24, r3
    1042:	80 68       	ori	r24, 0x80	; 128
    1044:	38 2e       	mov	r3, r24
    1046:	02 c0       	rjmp	.+4      	; 0x104c <vfprintf+0xe6>
    1048:	88 36       	cpi	r24, 0x68	; 104
    104a:	41 f4       	brne	.+16     	; 0x105c <vfprintf+0xf6>
    104c:	f7 01       	movw	r30, r14
    104e:	93 fd       	sbrc	r25, 3
    1050:	85 91       	lpm	r24, Z+
    1052:	93 ff       	sbrs	r25, 3
    1054:	81 91       	ld	r24, Z+
    1056:	7f 01       	movw	r14, r30
    1058:	81 11       	cpse	r24, r1
    105a:	b3 cf       	rjmp	.-154    	; 0xfc2 <vfprintf+0x5c>
    105c:	98 2f       	mov	r25, r24
    105e:	9f 7d       	andi	r25, 0xDF	; 223
    1060:	95 54       	subi	r25, 0x45	; 69
    1062:	93 30       	cpi	r25, 0x03	; 3
    1064:	28 f4       	brcc	.+10     	; 0x1070 <vfprintf+0x10a>
    1066:	0c 5f       	subi	r16, 0xFC	; 252
    1068:	1f 4f       	sbci	r17, 0xFF	; 255
    106a:	9f e3       	ldi	r25, 0x3F	; 63
    106c:	99 83       	std	Y+1, r25	; 0x01
    106e:	0d c0       	rjmp	.+26     	; 0x108a <vfprintf+0x124>
    1070:	83 36       	cpi	r24, 0x63	; 99
    1072:	31 f0       	breq	.+12     	; 0x1080 <vfprintf+0x11a>
    1074:	83 37       	cpi	r24, 0x73	; 115
    1076:	71 f0       	breq	.+28     	; 0x1094 <vfprintf+0x12e>
    1078:	83 35       	cpi	r24, 0x53	; 83
    107a:	09 f0       	breq	.+2      	; 0x107e <vfprintf+0x118>
    107c:	59 c0       	rjmp	.+178    	; 0x1130 <vfprintf+0x1ca>
    107e:	21 c0       	rjmp	.+66     	; 0x10c2 <vfprintf+0x15c>
    1080:	f8 01       	movw	r30, r16
    1082:	80 81       	ld	r24, Z
    1084:	89 83       	std	Y+1, r24	; 0x01
    1086:	0e 5f       	subi	r16, 0xFE	; 254
    1088:	1f 4f       	sbci	r17, 0xFF	; 255
    108a:	88 24       	eor	r8, r8
    108c:	83 94       	inc	r8
    108e:	91 2c       	mov	r9, r1
    1090:	53 01       	movw	r10, r6
    1092:	13 c0       	rjmp	.+38     	; 0x10ba <vfprintf+0x154>
    1094:	28 01       	movw	r4, r16
    1096:	f2 e0       	ldi	r31, 0x02	; 2
    1098:	4f 0e       	add	r4, r31
    109a:	51 1c       	adc	r5, r1
    109c:	f8 01       	movw	r30, r16
    109e:	a0 80       	ld	r10, Z
    10a0:	b1 80       	ldd	r11, Z+1	; 0x01
    10a2:	36 fe       	sbrs	r3, 6
    10a4:	03 c0       	rjmp	.+6      	; 0x10ac <vfprintf+0x146>
    10a6:	69 2d       	mov	r22, r9
    10a8:	70 e0       	ldi	r23, 0x00	; 0
    10aa:	02 c0       	rjmp	.+4      	; 0x10b0 <vfprintf+0x14a>
    10ac:	6f ef       	ldi	r22, 0xFF	; 255
    10ae:	7f ef       	ldi	r23, 0xFF	; 255
    10b0:	c5 01       	movw	r24, r10
    10b2:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <strnlen>
    10b6:	4c 01       	movw	r8, r24
    10b8:	82 01       	movw	r16, r4
    10ba:	f3 2d       	mov	r31, r3
    10bc:	ff 77       	andi	r31, 0x7F	; 127
    10be:	3f 2e       	mov	r3, r31
    10c0:	16 c0       	rjmp	.+44     	; 0x10ee <vfprintf+0x188>
    10c2:	28 01       	movw	r4, r16
    10c4:	22 e0       	ldi	r18, 0x02	; 2
    10c6:	42 0e       	add	r4, r18
    10c8:	51 1c       	adc	r5, r1
    10ca:	f8 01       	movw	r30, r16
    10cc:	a0 80       	ld	r10, Z
    10ce:	b1 80       	ldd	r11, Z+1	; 0x01
    10d0:	36 fe       	sbrs	r3, 6
    10d2:	03 c0       	rjmp	.+6      	; 0x10da <vfprintf+0x174>
    10d4:	69 2d       	mov	r22, r9
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <vfprintf+0x178>
    10da:	6f ef       	ldi	r22, 0xFF	; 255
    10dc:	7f ef       	ldi	r23, 0xFF	; 255
    10de:	c5 01       	movw	r24, r10
    10e0:	0e 94 c6 0b 	call	0x178c	; 0x178c <strnlen_P>
    10e4:	4c 01       	movw	r8, r24
    10e6:	f3 2d       	mov	r31, r3
    10e8:	f0 68       	ori	r31, 0x80	; 128
    10ea:	3f 2e       	mov	r3, r31
    10ec:	82 01       	movw	r16, r4
    10ee:	33 fc       	sbrc	r3, 3
    10f0:	1b c0       	rjmp	.+54     	; 0x1128 <vfprintf+0x1c2>
    10f2:	82 2d       	mov	r24, r2
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	88 16       	cp	r8, r24
    10f8:	99 06       	cpc	r9, r25
    10fa:	b0 f4       	brcc	.+44     	; 0x1128 <vfprintf+0x1c2>
    10fc:	b6 01       	movw	r22, r12
    10fe:	80 e2       	ldi	r24, 0x20	; 32
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    1106:	2a 94       	dec	r2
    1108:	f4 cf       	rjmp	.-24     	; 0x10f2 <vfprintf+0x18c>
    110a:	f5 01       	movw	r30, r10
    110c:	37 fc       	sbrc	r3, 7
    110e:	85 91       	lpm	r24, Z+
    1110:	37 fe       	sbrs	r3, 7
    1112:	81 91       	ld	r24, Z+
    1114:	5f 01       	movw	r10, r30
    1116:	b6 01       	movw	r22, r12
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    111e:	21 10       	cpse	r2, r1
    1120:	2a 94       	dec	r2
    1122:	21 e0       	ldi	r18, 0x01	; 1
    1124:	82 1a       	sub	r8, r18
    1126:	91 08       	sbc	r9, r1
    1128:	81 14       	cp	r8, r1
    112a:	91 04       	cpc	r9, r1
    112c:	71 f7       	brne	.-36     	; 0x110a <vfprintf+0x1a4>
    112e:	e8 c0       	rjmp	.+464    	; 0x1300 <vfprintf+0x39a>
    1130:	84 36       	cpi	r24, 0x64	; 100
    1132:	11 f0       	breq	.+4      	; 0x1138 <vfprintf+0x1d2>
    1134:	89 36       	cpi	r24, 0x69	; 105
    1136:	41 f5       	brne	.+80     	; 0x1188 <vfprintf+0x222>
    1138:	f8 01       	movw	r30, r16
    113a:	37 fe       	sbrs	r3, 7
    113c:	07 c0       	rjmp	.+14     	; 0x114c <vfprintf+0x1e6>
    113e:	60 81       	ld	r22, Z
    1140:	71 81       	ldd	r23, Z+1	; 0x01
    1142:	82 81       	ldd	r24, Z+2	; 0x02
    1144:	93 81       	ldd	r25, Z+3	; 0x03
    1146:	0c 5f       	subi	r16, 0xFC	; 252
    1148:	1f 4f       	sbci	r17, 0xFF	; 255
    114a:	08 c0       	rjmp	.+16     	; 0x115c <vfprintf+0x1f6>
    114c:	60 81       	ld	r22, Z
    114e:	71 81       	ldd	r23, Z+1	; 0x01
    1150:	07 2e       	mov	r0, r23
    1152:	00 0c       	add	r0, r0
    1154:	88 0b       	sbc	r24, r24
    1156:	99 0b       	sbc	r25, r25
    1158:	0e 5f       	subi	r16, 0xFE	; 254
    115a:	1f 4f       	sbci	r17, 0xFF	; 255
    115c:	f3 2d       	mov	r31, r3
    115e:	ff 76       	andi	r31, 0x6F	; 111
    1160:	3f 2e       	mov	r3, r31
    1162:	97 ff       	sbrs	r25, 7
    1164:	09 c0       	rjmp	.+18     	; 0x1178 <vfprintf+0x212>
    1166:	90 95       	com	r25
    1168:	80 95       	com	r24
    116a:	70 95       	com	r23
    116c:	61 95       	neg	r22
    116e:	7f 4f       	sbci	r23, 0xFF	; 255
    1170:	8f 4f       	sbci	r24, 0xFF	; 255
    1172:	9f 4f       	sbci	r25, 0xFF	; 255
    1174:	f0 68       	ori	r31, 0x80	; 128
    1176:	3f 2e       	mov	r3, r31
    1178:	2a e0       	ldi	r18, 0x0A	; 10
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	a3 01       	movw	r20, r6
    117e:	0e 94 18 0c 	call	0x1830	; 0x1830 <__ultoa_invert>
    1182:	88 2e       	mov	r8, r24
    1184:	86 18       	sub	r8, r6
    1186:	45 c0       	rjmp	.+138    	; 0x1212 <vfprintf+0x2ac>
    1188:	85 37       	cpi	r24, 0x75	; 117
    118a:	31 f4       	brne	.+12     	; 0x1198 <vfprintf+0x232>
    118c:	23 2d       	mov	r18, r3
    118e:	2f 7e       	andi	r18, 0xEF	; 239
    1190:	b2 2e       	mov	r11, r18
    1192:	2a e0       	ldi	r18, 0x0A	; 10
    1194:	30 e0       	ldi	r19, 0x00	; 0
    1196:	25 c0       	rjmp	.+74     	; 0x11e2 <vfprintf+0x27c>
    1198:	93 2d       	mov	r25, r3
    119a:	99 7f       	andi	r25, 0xF9	; 249
    119c:	b9 2e       	mov	r11, r25
    119e:	8f 36       	cpi	r24, 0x6F	; 111
    11a0:	c1 f0       	breq	.+48     	; 0x11d2 <vfprintf+0x26c>
    11a2:	18 f4       	brcc	.+6      	; 0x11aa <vfprintf+0x244>
    11a4:	88 35       	cpi	r24, 0x58	; 88
    11a6:	79 f0       	breq	.+30     	; 0x11c6 <vfprintf+0x260>
    11a8:	b5 c0       	rjmp	.+362    	; 0x1314 <vfprintf+0x3ae>
    11aa:	80 37       	cpi	r24, 0x70	; 112
    11ac:	19 f0       	breq	.+6      	; 0x11b4 <vfprintf+0x24e>
    11ae:	88 37       	cpi	r24, 0x78	; 120
    11b0:	21 f0       	breq	.+8      	; 0x11ba <vfprintf+0x254>
    11b2:	b0 c0       	rjmp	.+352    	; 0x1314 <vfprintf+0x3ae>
    11b4:	e9 2f       	mov	r30, r25
    11b6:	e0 61       	ori	r30, 0x10	; 16
    11b8:	be 2e       	mov	r11, r30
    11ba:	b4 fe       	sbrs	r11, 4
    11bc:	0d c0       	rjmp	.+26     	; 0x11d8 <vfprintf+0x272>
    11be:	fb 2d       	mov	r31, r11
    11c0:	f4 60       	ori	r31, 0x04	; 4
    11c2:	bf 2e       	mov	r11, r31
    11c4:	09 c0       	rjmp	.+18     	; 0x11d8 <vfprintf+0x272>
    11c6:	34 fe       	sbrs	r3, 4
    11c8:	0a c0       	rjmp	.+20     	; 0x11de <vfprintf+0x278>
    11ca:	29 2f       	mov	r18, r25
    11cc:	26 60       	ori	r18, 0x06	; 6
    11ce:	b2 2e       	mov	r11, r18
    11d0:	06 c0       	rjmp	.+12     	; 0x11de <vfprintf+0x278>
    11d2:	28 e0       	ldi	r18, 0x08	; 8
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	05 c0       	rjmp	.+10     	; 0x11e2 <vfprintf+0x27c>
    11d8:	20 e1       	ldi	r18, 0x10	; 16
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	02 c0       	rjmp	.+4      	; 0x11e2 <vfprintf+0x27c>
    11de:	20 e1       	ldi	r18, 0x10	; 16
    11e0:	32 e0       	ldi	r19, 0x02	; 2
    11e2:	f8 01       	movw	r30, r16
    11e4:	b7 fe       	sbrs	r11, 7
    11e6:	07 c0       	rjmp	.+14     	; 0x11f6 <vfprintf+0x290>
    11e8:	60 81       	ld	r22, Z
    11ea:	71 81       	ldd	r23, Z+1	; 0x01
    11ec:	82 81       	ldd	r24, Z+2	; 0x02
    11ee:	93 81       	ldd	r25, Z+3	; 0x03
    11f0:	0c 5f       	subi	r16, 0xFC	; 252
    11f2:	1f 4f       	sbci	r17, 0xFF	; 255
    11f4:	06 c0       	rjmp	.+12     	; 0x1202 <vfprintf+0x29c>
    11f6:	60 81       	ld	r22, Z
    11f8:	71 81       	ldd	r23, Z+1	; 0x01
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0e 5f       	subi	r16, 0xFE	; 254
    1200:	1f 4f       	sbci	r17, 0xFF	; 255
    1202:	a3 01       	movw	r20, r6
    1204:	0e 94 18 0c 	call	0x1830	; 0x1830 <__ultoa_invert>
    1208:	88 2e       	mov	r8, r24
    120a:	86 18       	sub	r8, r6
    120c:	fb 2d       	mov	r31, r11
    120e:	ff 77       	andi	r31, 0x7F	; 127
    1210:	3f 2e       	mov	r3, r31
    1212:	36 fe       	sbrs	r3, 6
    1214:	0d c0       	rjmp	.+26     	; 0x1230 <vfprintf+0x2ca>
    1216:	23 2d       	mov	r18, r3
    1218:	2e 7f       	andi	r18, 0xFE	; 254
    121a:	a2 2e       	mov	r10, r18
    121c:	89 14       	cp	r8, r9
    121e:	58 f4       	brcc	.+22     	; 0x1236 <vfprintf+0x2d0>
    1220:	34 fe       	sbrs	r3, 4
    1222:	0b c0       	rjmp	.+22     	; 0x123a <vfprintf+0x2d4>
    1224:	32 fc       	sbrc	r3, 2
    1226:	09 c0       	rjmp	.+18     	; 0x123a <vfprintf+0x2d4>
    1228:	83 2d       	mov	r24, r3
    122a:	8e 7e       	andi	r24, 0xEE	; 238
    122c:	a8 2e       	mov	r10, r24
    122e:	05 c0       	rjmp	.+10     	; 0x123a <vfprintf+0x2d4>
    1230:	b8 2c       	mov	r11, r8
    1232:	a3 2c       	mov	r10, r3
    1234:	03 c0       	rjmp	.+6      	; 0x123c <vfprintf+0x2d6>
    1236:	b8 2c       	mov	r11, r8
    1238:	01 c0       	rjmp	.+2      	; 0x123c <vfprintf+0x2d6>
    123a:	b9 2c       	mov	r11, r9
    123c:	a4 fe       	sbrs	r10, 4
    123e:	0f c0       	rjmp	.+30     	; 0x125e <vfprintf+0x2f8>
    1240:	fe 01       	movw	r30, r28
    1242:	e8 0d       	add	r30, r8
    1244:	f1 1d       	adc	r31, r1
    1246:	80 81       	ld	r24, Z
    1248:	80 33       	cpi	r24, 0x30	; 48
    124a:	21 f4       	brne	.+8      	; 0x1254 <vfprintf+0x2ee>
    124c:	9a 2d       	mov	r25, r10
    124e:	99 7e       	andi	r25, 0xE9	; 233
    1250:	a9 2e       	mov	r10, r25
    1252:	09 c0       	rjmp	.+18     	; 0x1266 <vfprintf+0x300>
    1254:	a2 fe       	sbrs	r10, 2
    1256:	06 c0       	rjmp	.+12     	; 0x1264 <vfprintf+0x2fe>
    1258:	b3 94       	inc	r11
    125a:	b3 94       	inc	r11
    125c:	04 c0       	rjmp	.+8      	; 0x1266 <vfprintf+0x300>
    125e:	8a 2d       	mov	r24, r10
    1260:	86 78       	andi	r24, 0x86	; 134
    1262:	09 f0       	breq	.+2      	; 0x1266 <vfprintf+0x300>
    1264:	b3 94       	inc	r11
    1266:	a3 fc       	sbrc	r10, 3
    1268:	11 c0       	rjmp	.+34     	; 0x128c <vfprintf+0x326>
    126a:	a0 fe       	sbrs	r10, 0
    126c:	06 c0       	rjmp	.+12     	; 0x127a <vfprintf+0x314>
    126e:	b2 14       	cp	r11, r2
    1270:	88 f4       	brcc	.+34     	; 0x1294 <vfprintf+0x32e>
    1272:	28 0c       	add	r2, r8
    1274:	92 2c       	mov	r9, r2
    1276:	9b 18       	sub	r9, r11
    1278:	0e c0       	rjmp	.+28     	; 0x1296 <vfprintf+0x330>
    127a:	b2 14       	cp	r11, r2
    127c:	60 f4       	brcc	.+24     	; 0x1296 <vfprintf+0x330>
    127e:	b6 01       	movw	r22, r12
    1280:	80 e2       	ldi	r24, 0x20	; 32
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    1288:	b3 94       	inc	r11
    128a:	f7 cf       	rjmp	.-18     	; 0x127a <vfprintf+0x314>
    128c:	b2 14       	cp	r11, r2
    128e:	18 f4       	brcc	.+6      	; 0x1296 <vfprintf+0x330>
    1290:	2b 18       	sub	r2, r11
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <vfprintf+0x332>
    1294:	98 2c       	mov	r9, r8
    1296:	21 2c       	mov	r2, r1
    1298:	a4 fe       	sbrs	r10, 4
    129a:	10 c0       	rjmp	.+32     	; 0x12bc <vfprintf+0x356>
    129c:	b6 01       	movw	r22, r12
    129e:	80 e3       	ldi	r24, 0x30	; 48
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    12a6:	a2 fe       	sbrs	r10, 2
    12a8:	17 c0       	rjmp	.+46     	; 0x12d8 <vfprintf+0x372>
    12aa:	a1 fc       	sbrc	r10, 1
    12ac:	03 c0       	rjmp	.+6      	; 0x12b4 <vfprintf+0x34e>
    12ae:	88 e7       	ldi	r24, 0x78	; 120
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	02 c0       	rjmp	.+4      	; 0x12b8 <vfprintf+0x352>
    12b4:	88 e5       	ldi	r24, 0x58	; 88
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	b6 01       	movw	r22, r12
    12ba:	0c c0       	rjmp	.+24     	; 0x12d4 <vfprintf+0x36e>
    12bc:	8a 2d       	mov	r24, r10
    12be:	86 78       	andi	r24, 0x86	; 134
    12c0:	59 f0       	breq	.+22     	; 0x12d8 <vfprintf+0x372>
    12c2:	a1 fe       	sbrs	r10, 1
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <vfprintf+0x364>
    12c6:	8b e2       	ldi	r24, 0x2B	; 43
    12c8:	01 c0       	rjmp	.+2      	; 0x12cc <vfprintf+0x366>
    12ca:	80 e2       	ldi	r24, 0x20	; 32
    12cc:	a7 fc       	sbrc	r10, 7
    12ce:	8d e2       	ldi	r24, 0x2D	; 45
    12d0:	b6 01       	movw	r22, r12
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    12d8:	89 14       	cp	r8, r9
    12da:	38 f4       	brcc	.+14     	; 0x12ea <vfprintf+0x384>
    12dc:	b6 01       	movw	r22, r12
    12de:	80 e3       	ldi	r24, 0x30	; 48
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    12e6:	9a 94       	dec	r9
    12e8:	f7 cf       	rjmp	.-18     	; 0x12d8 <vfprintf+0x372>
    12ea:	8a 94       	dec	r8
    12ec:	f3 01       	movw	r30, r6
    12ee:	e8 0d       	add	r30, r8
    12f0:	f1 1d       	adc	r31, r1
    12f2:	80 81       	ld	r24, Z
    12f4:	b6 01       	movw	r22, r12
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    12fc:	81 10       	cpse	r8, r1
    12fe:	f5 cf       	rjmp	.-22     	; 0x12ea <vfprintf+0x384>
    1300:	22 20       	and	r2, r2
    1302:	09 f4       	brne	.+2      	; 0x1306 <vfprintf+0x3a0>
    1304:	42 ce       	rjmp	.-892    	; 0xf8a <vfprintf+0x24>
    1306:	b6 01       	movw	r22, r12
    1308:	80 e2       	ldi	r24, 0x20	; 32
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <fputc>
    1310:	2a 94       	dec	r2
    1312:	f6 cf       	rjmp	.-20     	; 0x1300 <vfprintf+0x39a>
    1314:	f6 01       	movw	r30, r12
    1316:	86 81       	ldd	r24, Z+6	; 0x06
    1318:	97 81       	ldd	r25, Z+7	; 0x07
    131a:	02 c0       	rjmp	.+4      	; 0x1320 <vfprintf+0x3ba>
    131c:	8f ef       	ldi	r24, 0xFF	; 255
    131e:	9f ef       	ldi	r25, 0xFF	; 255
    1320:	2b 96       	adiw	r28, 0x0b	; 11
    1322:	e2 e1       	ldi	r30, 0x12	; 18
    1324:	0c 94 92 0c 	jmp	0x1924	; 0x1924 <__epilogue_restores__>

00001328 <dtoa_prf>:
    1328:	a9 e0       	ldi	r26, 0x09	; 9
    132a:	b0 e0       	ldi	r27, 0x00	; 0
    132c:	ea e9       	ldi	r30, 0x9A	; 154
    132e:	f9 e0       	ldi	r31, 0x09	; 9
    1330:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__prologue_saves__+0xc>
    1334:	6a 01       	movw	r12, r20
    1336:	12 2f       	mov	r17, r18
    1338:	b0 2e       	mov	r11, r16
    133a:	2b e3       	ldi	r18, 0x3B	; 59
    133c:	20 17       	cp	r18, r16
    133e:	20 f0       	brcs	.+8      	; 0x1348 <dtoa_prf+0x20>
    1340:	ff 24       	eor	r15, r15
    1342:	f3 94       	inc	r15
    1344:	f0 0e       	add	r15, r16
    1346:	02 c0       	rjmp	.+4      	; 0x134c <dtoa_prf+0x24>
    1348:	2c e3       	ldi	r18, 0x3C	; 60
    134a:	f2 2e       	mov	r15, r18
    134c:	0f 2d       	mov	r16, r15
    134e:	27 e0       	ldi	r18, 0x07	; 7
    1350:	ae 01       	movw	r20, r28
    1352:	4f 5f       	subi	r20, 0xFF	; 255
    1354:	5f 4f       	sbci	r21, 0xFF	; 255
    1356:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <__ftoa_engine>
    135a:	bc 01       	movw	r22, r24
    135c:	49 81       	ldd	r20, Y+1	; 0x01
    135e:	84 2f       	mov	r24, r20
    1360:	89 70       	andi	r24, 0x09	; 9
    1362:	81 30       	cpi	r24, 0x01	; 1
    1364:	31 f0       	breq	.+12     	; 0x1372 <dtoa_prf+0x4a>
    1366:	e1 fc       	sbrc	r14, 1
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <dtoa_prf+0x4e>
    136a:	e0 fe       	sbrs	r14, 0
    136c:	06 c0       	rjmp	.+12     	; 0x137a <dtoa_prf+0x52>
    136e:	90 e2       	ldi	r25, 0x20	; 32
    1370:	05 c0       	rjmp	.+10     	; 0x137c <dtoa_prf+0x54>
    1372:	9d e2       	ldi	r25, 0x2D	; 45
    1374:	03 c0       	rjmp	.+6      	; 0x137c <dtoa_prf+0x54>
    1376:	9b e2       	ldi	r25, 0x2B	; 43
    1378:	01 c0       	rjmp	.+2      	; 0x137c <dtoa_prf+0x54>
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	5e 2d       	mov	r21, r14
    137e:	50 71       	andi	r21, 0x10	; 16
    1380:	43 ff       	sbrs	r20, 3
    1382:	3c c0       	rjmp	.+120    	; 0x13fc <dtoa_prf+0xd4>
    1384:	91 11       	cpse	r25, r1
    1386:	02 c0       	rjmp	.+4      	; 0x138c <dtoa_prf+0x64>
    1388:	83 e0       	ldi	r24, 0x03	; 3
    138a:	01 c0       	rjmp	.+2      	; 0x138e <dtoa_prf+0x66>
    138c:	84 e0       	ldi	r24, 0x04	; 4
    138e:	81 17       	cp	r24, r17
    1390:	18 f4       	brcc	.+6      	; 0x1398 <dtoa_prf+0x70>
    1392:	21 2f       	mov	r18, r17
    1394:	28 1b       	sub	r18, r24
    1396:	01 c0       	rjmp	.+2      	; 0x139a <dtoa_prf+0x72>
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	51 11       	cpse	r21, r1
    139c:	0b c0       	rjmp	.+22     	; 0x13b4 <dtoa_prf+0x8c>
    139e:	f6 01       	movw	r30, r12
    13a0:	82 2f       	mov	r24, r18
    13a2:	30 e2       	ldi	r19, 0x20	; 32
    13a4:	88 23       	and	r24, r24
    13a6:	19 f0       	breq	.+6      	; 0x13ae <dtoa_prf+0x86>
    13a8:	31 93       	st	Z+, r19
    13aa:	81 50       	subi	r24, 0x01	; 1
    13ac:	fb cf       	rjmp	.-10     	; 0x13a4 <dtoa_prf+0x7c>
    13ae:	c2 0e       	add	r12, r18
    13b0:	d1 1c       	adc	r13, r1
    13b2:	20 e0       	ldi	r18, 0x00	; 0
    13b4:	99 23       	and	r25, r25
    13b6:	29 f0       	breq	.+10     	; 0x13c2 <dtoa_prf+0x9a>
    13b8:	d6 01       	movw	r26, r12
    13ba:	9c 93       	st	X, r25
    13bc:	f6 01       	movw	r30, r12
    13be:	31 96       	adiw	r30, 0x01	; 1
    13c0:	6f 01       	movw	r12, r30
    13c2:	c6 01       	movw	r24, r12
    13c4:	03 96       	adiw	r24, 0x03	; 3
    13c6:	e2 fe       	sbrs	r14, 2
    13c8:	0a c0       	rjmp	.+20     	; 0x13de <dtoa_prf+0xb6>
    13ca:	3e e4       	ldi	r19, 0x4E	; 78
    13cc:	d6 01       	movw	r26, r12
    13ce:	3c 93       	st	X, r19
    13d0:	41 e4       	ldi	r20, 0x41	; 65
    13d2:	11 96       	adiw	r26, 0x01	; 1
    13d4:	4c 93       	st	X, r20
    13d6:	11 97       	sbiw	r26, 0x01	; 1
    13d8:	12 96       	adiw	r26, 0x02	; 2
    13da:	3c 93       	st	X, r19
    13dc:	06 c0       	rjmp	.+12     	; 0x13ea <dtoa_prf+0xc2>
    13de:	3e e6       	ldi	r19, 0x6E	; 110
    13e0:	f6 01       	movw	r30, r12
    13e2:	30 83       	st	Z, r19
    13e4:	41 e6       	ldi	r20, 0x61	; 97
    13e6:	41 83       	std	Z+1, r20	; 0x01
    13e8:	32 83       	std	Z+2, r19	; 0x02
    13ea:	fc 01       	movw	r30, r24
    13ec:	32 2f       	mov	r19, r18
    13ee:	40 e2       	ldi	r20, 0x20	; 32
    13f0:	33 23       	and	r19, r19
    13f2:	09 f4       	brne	.+2      	; 0x13f6 <dtoa_prf+0xce>
    13f4:	42 c0       	rjmp	.+132    	; 0x147a <dtoa_prf+0x152>
    13f6:	41 93       	st	Z+, r20
    13f8:	31 50       	subi	r19, 0x01	; 1
    13fa:	fa cf       	rjmp	.-12     	; 0x13f0 <dtoa_prf+0xc8>
    13fc:	42 ff       	sbrs	r20, 2
    13fe:	44 c0       	rjmp	.+136    	; 0x1488 <dtoa_prf+0x160>
    1400:	91 11       	cpse	r25, r1
    1402:	02 c0       	rjmp	.+4      	; 0x1408 <dtoa_prf+0xe0>
    1404:	83 e0       	ldi	r24, 0x03	; 3
    1406:	01 c0       	rjmp	.+2      	; 0x140a <dtoa_prf+0xe2>
    1408:	84 e0       	ldi	r24, 0x04	; 4
    140a:	81 17       	cp	r24, r17
    140c:	18 f4       	brcc	.+6      	; 0x1414 <dtoa_prf+0xec>
    140e:	21 2f       	mov	r18, r17
    1410:	28 1b       	sub	r18, r24
    1412:	01 c0       	rjmp	.+2      	; 0x1416 <dtoa_prf+0xee>
    1414:	20 e0       	ldi	r18, 0x00	; 0
    1416:	51 11       	cpse	r21, r1
    1418:	0b c0       	rjmp	.+22     	; 0x1430 <dtoa_prf+0x108>
    141a:	f6 01       	movw	r30, r12
    141c:	82 2f       	mov	r24, r18
    141e:	30 e2       	ldi	r19, 0x20	; 32
    1420:	88 23       	and	r24, r24
    1422:	19 f0       	breq	.+6      	; 0x142a <dtoa_prf+0x102>
    1424:	31 93       	st	Z+, r19
    1426:	81 50       	subi	r24, 0x01	; 1
    1428:	fb cf       	rjmp	.-10     	; 0x1420 <dtoa_prf+0xf8>
    142a:	c2 0e       	add	r12, r18
    142c:	d1 1c       	adc	r13, r1
    142e:	20 e0       	ldi	r18, 0x00	; 0
    1430:	99 23       	and	r25, r25
    1432:	29 f0       	breq	.+10     	; 0x143e <dtoa_prf+0x116>
    1434:	d6 01       	movw	r26, r12
    1436:	9c 93       	st	X, r25
    1438:	f6 01       	movw	r30, r12
    143a:	31 96       	adiw	r30, 0x01	; 1
    143c:	6f 01       	movw	r12, r30
    143e:	c6 01       	movw	r24, r12
    1440:	03 96       	adiw	r24, 0x03	; 3
    1442:	e2 fe       	sbrs	r14, 2
    1444:	0b c0       	rjmp	.+22     	; 0x145c <dtoa_prf+0x134>
    1446:	39 e4       	ldi	r19, 0x49	; 73
    1448:	d6 01       	movw	r26, r12
    144a:	3c 93       	st	X, r19
    144c:	3e e4       	ldi	r19, 0x4E	; 78
    144e:	11 96       	adiw	r26, 0x01	; 1
    1450:	3c 93       	st	X, r19
    1452:	11 97       	sbiw	r26, 0x01	; 1
    1454:	36 e4       	ldi	r19, 0x46	; 70
    1456:	12 96       	adiw	r26, 0x02	; 2
    1458:	3c 93       	st	X, r19
    145a:	07 c0       	rjmp	.+14     	; 0x146a <dtoa_prf+0x142>
    145c:	39 e6       	ldi	r19, 0x69	; 105
    145e:	f6 01       	movw	r30, r12
    1460:	30 83       	st	Z, r19
    1462:	3e e6       	ldi	r19, 0x6E	; 110
    1464:	31 83       	std	Z+1, r19	; 0x01
    1466:	36 e6       	ldi	r19, 0x66	; 102
    1468:	32 83       	std	Z+2, r19	; 0x02
    146a:	fc 01       	movw	r30, r24
    146c:	32 2f       	mov	r19, r18
    146e:	40 e2       	ldi	r20, 0x20	; 32
    1470:	33 23       	and	r19, r19
    1472:	19 f0       	breq	.+6      	; 0x147a <dtoa_prf+0x152>
    1474:	41 93       	st	Z+, r20
    1476:	31 50       	subi	r19, 0x01	; 1
    1478:	fb cf       	rjmp	.-10     	; 0x1470 <dtoa_prf+0x148>
    147a:	fc 01       	movw	r30, r24
    147c:	e2 0f       	add	r30, r18
    147e:	f1 1d       	adc	r31, r1
    1480:	10 82       	st	Z, r1
    1482:	8e ef       	ldi	r24, 0xFE	; 254
    1484:	9f ef       	ldi	r25, 0xFF	; 255
    1486:	a6 c0       	rjmp	.+332    	; 0x15d4 <dtoa_prf+0x2ac>
    1488:	21 e0       	ldi	r18, 0x01	; 1
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	91 11       	cpse	r25, r1
    148e:	02 c0       	rjmp	.+4      	; 0x1494 <dtoa_prf+0x16c>
    1490:	20 e0       	ldi	r18, 0x00	; 0
    1492:	30 e0       	ldi	r19, 0x00	; 0
    1494:	16 16       	cp	r1, r22
    1496:	17 06       	cpc	r1, r23
    1498:	1c f4       	brge	.+6      	; 0x14a0 <dtoa_prf+0x178>
    149a:	fb 01       	movw	r30, r22
    149c:	31 96       	adiw	r30, 0x01	; 1
    149e:	02 c0       	rjmp	.+4      	; 0x14a4 <dtoa_prf+0x17c>
    14a0:	e1 e0       	ldi	r30, 0x01	; 1
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	2e 0f       	add	r18, r30
    14a6:	3f 1f       	adc	r19, r31
    14a8:	bb 20       	and	r11, r11
    14aa:	21 f0       	breq	.+8      	; 0x14b4 <dtoa_prf+0x18c>
    14ac:	eb 2d       	mov	r30, r11
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	31 96       	adiw	r30, 0x01	; 1
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <dtoa_prf+0x190>
    14b4:	e0 e0       	ldi	r30, 0x00	; 0
    14b6:	f0 e0       	ldi	r31, 0x00	; 0
    14b8:	2e 0f       	add	r18, r30
    14ba:	3f 1f       	adc	r19, r31
    14bc:	e1 2f       	mov	r30, r17
    14be:	f0 e0       	ldi	r31, 0x00	; 0
    14c0:	2e 17       	cp	r18, r30
    14c2:	3f 07       	cpc	r19, r31
    14c4:	1c f4       	brge	.+6      	; 0x14cc <dtoa_prf+0x1a4>
    14c6:	12 1b       	sub	r17, r18
    14c8:	21 2f       	mov	r18, r17
    14ca:	01 c0       	rjmp	.+2      	; 0x14ce <dtoa_prf+0x1a6>
    14cc:	20 e0       	ldi	r18, 0x00	; 0
    14ce:	8e 2d       	mov	r24, r14
    14d0:	88 71       	andi	r24, 0x18	; 24
    14d2:	59 f4       	brne	.+22     	; 0x14ea <dtoa_prf+0x1c2>
    14d4:	f6 01       	movw	r30, r12
    14d6:	82 2f       	mov	r24, r18
    14d8:	30 e2       	ldi	r19, 0x20	; 32
    14da:	88 23       	and	r24, r24
    14dc:	19 f0       	breq	.+6      	; 0x14e4 <dtoa_prf+0x1bc>
    14de:	31 93       	st	Z+, r19
    14e0:	81 50       	subi	r24, 0x01	; 1
    14e2:	fb cf       	rjmp	.-10     	; 0x14da <dtoa_prf+0x1b2>
    14e4:	c2 0e       	add	r12, r18
    14e6:	d1 1c       	adc	r13, r1
    14e8:	20 e0       	ldi	r18, 0x00	; 0
    14ea:	99 23       	and	r25, r25
    14ec:	29 f0       	breq	.+10     	; 0x14f8 <dtoa_prf+0x1d0>
    14ee:	d6 01       	movw	r26, r12
    14f0:	9c 93       	st	X, r25
    14f2:	f6 01       	movw	r30, r12
    14f4:	31 96       	adiw	r30, 0x01	; 1
    14f6:	6f 01       	movw	r12, r30
    14f8:	51 11       	cpse	r21, r1
    14fa:	0b c0       	rjmp	.+22     	; 0x1512 <dtoa_prf+0x1ea>
    14fc:	f6 01       	movw	r30, r12
    14fe:	82 2f       	mov	r24, r18
    1500:	90 e3       	ldi	r25, 0x30	; 48
    1502:	88 23       	and	r24, r24
    1504:	19 f0       	breq	.+6      	; 0x150c <dtoa_prf+0x1e4>
    1506:	91 93       	st	Z+, r25
    1508:	81 50       	subi	r24, 0x01	; 1
    150a:	fb cf       	rjmp	.-10     	; 0x1502 <dtoa_prf+0x1da>
    150c:	c2 0e       	add	r12, r18
    150e:	d1 1c       	adc	r13, r1
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	0f 2d       	mov	r16, r15
    1514:	06 0f       	add	r16, r22
    1516:	9a 81       	ldd	r25, Y+2	; 0x02
    1518:	34 2f       	mov	r19, r20
    151a:	30 71       	andi	r19, 0x10	; 16
    151c:	44 ff       	sbrs	r20, 4
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <dtoa_prf+0x1fe>
    1520:	91 33       	cpi	r25, 0x31	; 49
    1522:	09 f4       	brne	.+2      	; 0x1526 <dtoa_prf+0x1fe>
    1524:	01 50       	subi	r16, 0x01	; 1
    1526:	10 16       	cp	r1, r16
    1528:	24 f4       	brge	.+8      	; 0x1532 <dtoa_prf+0x20a>
    152a:	09 30       	cpi	r16, 0x09	; 9
    152c:	18 f0       	brcs	.+6      	; 0x1534 <dtoa_prf+0x20c>
    152e:	08 e0       	ldi	r16, 0x08	; 8
    1530:	01 c0       	rjmp	.+2      	; 0x1534 <dtoa_prf+0x20c>
    1532:	01 e0       	ldi	r16, 0x01	; 1
    1534:	ab 01       	movw	r20, r22
    1536:	77 ff       	sbrs	r23, 7
    1538:	02 c0       	rjmp	.+4      	; 0x153e <dtoa_prf+0x216>
    153a:	40 e0       	ldi	r20, 0x00	; 0
    153c:	50 e0       	ldi	r21, 0x00	; 0
    153e:	fb 01       	movw	r30, r22
    1540:	e4 1b       	sub	r30, r20
    1542:	f5 0b       	sbc	r31, r21
    1544:	a1 e0       	ldi	r26, 0x01	; 1
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	ac 0f       	add	r26, r28
    154a:	bd 1f       	adc	r27, r29
    154c:	ea 0f       	add	r30, r26
    154e:	fb 1f       	adc	r31, r27
    1550:	8e e2       	ldi	r24, 0x2E	; 46
    1552:	a8 2e       	mov	r10, r24
    1554:	4b 01       	movw	r8, r22
    1556:	80 1a       	sub	r8, r16
    1558:	91 08       	sbc	r9, r1
    155a:	0b 2d       	mov	r16, r11
    155c:	10 e0       	ldi	r17, 0x00	; 0
    155e:	11 95       	neg	r17
    1560:	01 95       	neg	r16
    1562:	11 09       	sbc	r17, r1
    1564:	4f 3f       	cpi	r20, 0xFF	; 255
    1566:	bf ef       	ldi	r27, 0xFF	; 255
    1568:	5b 07       	cpc	r21, r27
    156a:	21 f4       	brne	.+8      	; 0x1574 <dtoa_prf+0x24c>
    156c:	d6 01       	movw	r26, r12
    156e:	ac 92       	st	X, r10
    1570:	11 96       	adiw	r26, 0x01	; 1
    1572:	6d 01       	movw	r12, r26
    1574:	64 17       	cp	r22, r20
    1576:	75 07       	cpc	r23, r21
    1578:	2c f0       	brlt	.+10     	; 0x1584 <dtoa_prf+0x25c>
    157a:	84 16       	cp	r8, r20
    157c:	95 06       	cpc	r9, r21
    157e:	14 f4       	brge	.+4      	; 0x1584 <dtoa_prf+0x25c>
    1580:	81 81       	ldd	r24, Z+1	; 0x01
    1582:	01 c0       	rjmp	.+2      	; 0x1586 <dtoa_prf+0x25e>
    1584:	80 e3       	ldi	r24, 0x30	; 48
    1586:	41 50       	subi	r20, 0x01	; 1
    1588:	51 09       	sbc	r21, r1
    158a:	31 96       	adiw	r30, 0x01	; 1
    158c:	d6 01       	movw	r26, r12
    158e:	11 96       	adiw	r26, 0x01	; 1
    1590:	7d 01       	movw	r14, r26
    1592:	40 17       	cp	r20, r16
    1594:	51 07       	cpc	r21, r17
    1596:	24 f0       	brlt	.+8      	; 0x15a0 <dtoa_prf+0x278>
    1598:	d6 01       	movw	r26, r12
    159a:	8c 93       	st	X, r24
    159c:	67 01       	movw	r12, r14
    159e:	e2 cf       	rjmp	.-60     	; 0x1564 <dtoa_prf+0x23c>
    15a0:	64 17       	cp	r22, r20
    15a2:	75 07       	cpc	r23, r21
    15a4:	39 f4       	brne	.+14     	; 0x15b4 <dtoa_prf+0x28c>
    15a6:	96 33       	cpi	r25, 0x36	; 54
    15a8:	20 f4       	brcc	.+8      	; 0x15b2 <dtoa_prf+0x28a>
    15aa:	95 33       	cpi	r25, 0x35	; 53
    15ac:	19 f4       	brne	.+6      	; 0x15b4 <dtoa_prf+0x28c>
    15ae:	31 11       	cpse	r19, r1
    15b0:	01 c0       	rjmp	.+2      	; 0x15b4 <dtoa_prf+0x28c>
    15b2:	81 e3       	ldi	r24, 0x31	; 49
    15b4:	f6 01       	movw	r30, r12
    15b6:	80 83       	st	Z, r24
    15b8:	f7 01       	movw	r30, r14
    15ba:	82 2f       	mov	r24, r18
    15bc:	90 e2       	ldi	r25, 0x20	; 32
    15be:	88 23       	and	r24, r24
    15c0:	19 f0       	breq	.+6      	; 0x15c8 <dtoa_prf+0x2a0>
    15c2:	91 93       	st	Z+, r25
    15c4:	81 50       	subi	r24, 0x01	; 1
    15c6:	fb cf       	rjmp	.-10     	; 0x15be <dtoa_prf+0x296>
    15c8:	f7 01       	movw	r30, r14
    15ca:	e2 0f       	add	r30, r18
    15cc:	f1 1d       	adc	r31, r1
    15ce:	10 82       	st	Z, r1
    15d0:	80 e0       	ldi	r24, 0x00	; 0
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	29 96       	adiw	r28, 0x09	; 9
    15d6:	ec e0       	ldi	r30, 0x0C	; 12
    15d8:	0c 94 98 0c 	jmp	0x1930	; 0x1930 <__epilogue_restores__+0xc>

000015dc <__ftoa_engine>:
    15dc:	28 30       	cpi	r18, 0x08	; 8
    15de:	08 f0       	brcs	.+2      	; 0x15e2 <__ftoa_engine+0x6>
    15e0:	27 e0       	ldi	r18, 0x07	; 7
    15e2:	33 27       	eor	r19, r19
    15e4:	da 01       	movw	r26, r20
    15e6:	99 0f       	add	r25, r25
    15e8:	31 1d       	adc	r19, r1
    15ea:	87 fd       	sbrc	r24, 7
    15ec:	91 60       	ori	r25, 0x01	; 1
    15ee:	00 96       	adiw	r24, 0x00	; 0
    15f0:	61 05       	cpc	r22, r1
    15f2:	71 05       	cpc	r23, r1
    15f4:	39 f4       	brne	.+14     	; 0x1604 <__ftoa_engine+0x28>
    15f6:	32 60       	ori	r19, 0x02	; 2
    15f8:	2e 5f       	subi	r18, 0xFE	; 254
    15fa:	3d 93       	st	X+, r19
    15fc:	30 e3       	ldi	r19, 0x30	; 48
    15fe:	2a 95       	dec	r18
    1600:	e1 f7       	brne	.-8      	; 0x15fa <__ftoa_engine+0x1e>
    1602:	08 95       	ret
    1604:	9f 3f       	cpi	r25, 0xFF	; 255
    1606:	30 f0       	brcs	.+12     	; 0x1614 <__ftoa_engine+0x38>
    1608:	80 38       	cpi	r24, 0x80	; 128
    160a:	71 05       	cpc	r23, r1
    160c:	61 05       	cpc	r22, r1
    160e:	09 f0       	breq	.+2      	; 0x1612 <__ftoa_engine+0x36>
    1610:	3c 5f       	subi	r19, 0xFC	; 252
    1612:	3c 5f       	subi	r19, 0xFC	; 252
    1614:	3d 93       	st	X+, r19
    1616:	91 30       	cpi	r25, 0x01	; 1
    1618:	08 f0       	brcs	.+2      	; 0x161c <__ftoa_engine+0x40>
    161a:	80 68       	ori	r24, 0x80	; 128
    161c:	91 1d       	adc	r25, r1
    161e:	df 93       	push	r29
    1620:	cf 93       	push	r28
    1622:	1f 93       	push	r17
    1624:	0f 93       	push	r16
    1626:	ff 92       	push	r15
    1628:	ef 92       	push	r14
    162a:	19 2f       	mov	r17, r25
    162c:	98 7f       	andi	r25, 0xF8	; 248
    162e:	96 95       	lsr	r25
    1630:	e9 2f       	mov	r30, r25
    1632:	96 95       	lsr	r25
    1634:	96 95       	lsr	r25
    1636:	e9 0f       	add	r30, r25
    1638:	ff 27       	eor	r31, r31
    163a:	e4 5c       	subi	r30, 0xC4	; 196
    163c:	fe 4f       	sbci	r31, 0xFE	; 254
    163e:	99 27       	eor	r25, r25
    1640:	33 27       	eor	r19, r19
    1642:	ee 24       	eor	r14, r14
    1644:	ff 24       	eor	r15, r15
    1646:	a7 01       	movw	r20, r14
    1648:	e7 01       	movw	r28, r14
    164a:	05 90       	lpm	r0, Z+
    164c:	08 94       	sec
    164e:	07 94       	ror	r0
    1650:	28 f4       	brcc	.+10     	; 0x165c <__ftoa_engine+0x80>
    1652:	36 0f       	add	r19, r22
    1654:	e7 1e       	adc	r14, r23
    1656:	f8 1e       	adc	r15, r24
    1658:	49 1f       	adc	r20, r25
    165a:	51 1d       	adc	r21, r1
    165c:	66 0f       	add	r22, r22
    165e:	77 1f       	adc	r23, r23
    1660:	88 1f       	adc	r24, r24
    1662:	99 1f       	adc	r25, r25
    1664:	06 94       	lsr	r0
    1666:	a1 f7       	brne	.-24     	; 0x1650 <__ftoa_engine+0x74>
    1668:	05 90       	lpm	r0, Z+
    166a:	07 94       	ror	r0
    166c:	28 f4       	brcc	.+10     	; 0x1678 <__ftoa_engine+0x9c>
    166e:	e7 0e       	add	r14, r23
    1670:	f8 1e       	adc	r15, r24
    1672:	49 1f       	adc	r20, r25
    1674:	56 1f       	adc	r21, r22
    1676:	c1 1d       	adc	r28, r1
    1678:	77 0f       	add	r23, r23
    167a:	88 1f       	adc	r24, r24
    167c:	99 1f       	adc	r25, r25
    167e:	66 1f       	adc	r22, r22
    1680:	06 94       	lsr	r0
    1682:	a1 f7       	brne	.-24     	; 0x166c <__ftoa_engine+0x90>
    1684:	05 90       	lpm	r0, Z+
    1686:	07 94       	ror	r0
    1688:	28 f4       	brcc	.+10     	; 0x1694 <__ftoa_engine+0xb8>
    168a:	f8 0e       	add	r15, r24
    168c:	49 1f       	adc	r20, r25
    168e:	56 1f       	adc	r21, r22
    1690:	c7 1f       	adc	r28, r23
    1692:	d1 1d       	adc	r29, r1
    1694:	88 0f       	add	r24, r24
    1696:	99 1f       	adc	r25, r25
    1698:	66 1f       	adc	r22, r22
    169a:	77 1f       	adc	r23, r23
    169c:	06 94       	lsr	r0
    169e:	a1 f7       	brne	.-24     	; 0x1688 <__ftoa_engine+0xac>
    16a0:	05 90       	lpm	r0, Z+
    16a2:	07 94       	ror	r0
    16a4:	20 f4       	brcc	.+8      	; 0x16ae <__ftoa_engine+0xd2>
    16a6:	49 0f       	add	r20, r25
    16a8:	56 1f       	adc	r21, r22
    16aa:	c7 1f       	adc	r28, r23
    16ac:	d8 1f       	adc	r29, r24
    16ae:	99 0f       	add	r25, r25
    16b0:	66 1f       	adc	r22, r22
    16b2:	77 1f       	adc	r23, r23
    16b4:	88 1f       	adc	r24, r24
    16b6:	06 94       	lsr	r0
    16b8:	a9 f7       	brne	.-22     	; 0x16a4 <__ftoa_engine+0xc8>
    16ba:	84 91       	lpm	r24, Z
    16bc:	10 95       	com	r17
    16be:	17 70       	andi	r17, 0x07	; 7
    16c0:	41 f0       	breq	.+16     	; 0x16d2 <__ftoa_engine+0xf6>
    16c2:	d6 95       	lsr	r29
    16c4:	c7 95       	ror	r28
    16c6:	57 95       	ror	r21
    16c8:	47 95       	ror	r20
    16ca:	f7 94       	ror	r15
    16cc:	e7 94       	ror	r14
    16ce:	1a 95       	dec	r17
    16d0:	c1 f7       	brne	.-16     	; 0x16c2 <__ftoa_engine+0xe6>
    16d2:	e2 ee       	ldi	r30, 0xE2	; 226
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	68 94       	set
    16d8:	15 90       	lpm	r1, Z+
    16da:	15 91       	lpm	r17, Z+
    16dc:	35 91       	lpm	r19, Z+
    16de:	65 91       	lpm	r22, Z+
    16e0:	95 91       	lpm	r25, Z+
    16e2:	05 90       	lpm	r0, Z+
    16e4:	7f e2       	ldi	r23, 0x2F	; 47
    16e6:	73 95       	inc	r23
    16e8:	e1 18       	sub	r14, r1
    16ea:	f1 0a       	sbc	r15, r17
    16ec:	43 0b       	sbc	r20, r19
    16ee:	56 0b       	sbc	r21, r22
    16f0:	c9 0b       	sbc	r28, r25
    16f2:	d0 09       	sbc	r29, r0
    16f4:	c0 f7       	brcc	.-16     	; 0x16e6 <__ftoa_engine+0x10a>
    16f6:	e1 0c       	add	r14, r1
    16f8:	f1 1e       	adc	r15, r17
    16fa:	43 1f       	adc	r20, r19
    16fc:	56 1f       	adc	r21, r22
    16fe:	c9 1f       	adc	r28, r25
    1700:	d0 1d       	adc	r29, r0
    1702:	7e f4       	brtc	.+30     	; 0x1722 <__ftoa_engine+0x146>
    1704:	70 33       	cpi	r23, 0x30	; 48
    1706:	11 f4       	brne	.+4      	; 0x170c <__ftoa_engine+0x130>
    1708:	8a 95       	dec	r24
    170a:	e6 cf       	rjmp	.-52     	; 0x16d8 <__ftoa_engine+0xfc>
    170c:	e8 94       	clt
    170e:	01 50       	subi	r16, 0x01	; 1
    1710:	30 f0       	brcs	.+12     	; 0x171e <__ftoa_engine+0x142>
    1712:	08 0f       	add	r16, r24
    1714:	0a f4       	brpl	.+2      	; 0x1718 <__ftoa_engine+0x13c>
    1716:	00 27       	eor	r16, r16
    1718:	02 17       	cp	r16, r18
    171a:	08 f4       	brcc	.+2      	; 0x171e <__ftoa_engine+0x142>
    171c:	20 2f       	mov	r18, r16
    171e:	23 95       	inc	r18
    1720:	02 2f       	mov	r16, r18
    1722:	7a 33       	cpi	r23, 0x3A	; 58
    1724:	28 f0       	brcs	.+10     	; 0x1730 <__ftoa_engine+0x154>
    1726:	79 e3       	ldi	r23, 0x39	; 57
    1728:	7d 93       	st	X+, r23
    172a:	2a 95       	dec	r18
    172c:	e9 f7       	brne	.-6      	; 0x1728 <__ftoa_engine+0x14c>
    172e:	10 c0       	rjmp	.+32     	; 0x1750 <__ftoa_engine+0x174>
    1730:	7d 93       	st	X+, r23
    1732:	2a 95       	dec	r18
    1734:	89 f6       	brne	.-94     	; 0x16d8 <__ftoa_engine+0xfc>
    1736:	06 94       	lsr	r0
    1738:	97 95       	ror	r25
    173a:	67 95       	ror	r22
    173c:	37 95       	ror	r19
    173e:	17 95       	ror	r17
    1740:	17 94       	ror	r1
    1742:	e1 18       	sub	r14, r1
    1744:	f1 0a       	sbc	r15, r17
    1746:	43 0b       	sbc	r20, r19
    1748:	56 0b       	sbc	r21, r22
    174a:	c9 0b       	sbc	r28, r25
    174c:	d0 09       	sbc	r29, r0
    174e:	98 f0       	brcs	.+38     	; 0x1776 <__ftoa_engine+0x19a>
    1750:	23 95       	inc	r18
    1752:	7e 91       	ld	r23, -X
    1754:	73 95       	inc	r23
    1756:	7a 33       	cpi	r23, 0x3A	; 58
    1758:	08 f0       	brcs	.+2      	; 0x175c <__ftoa_engine+0x180>
    175a:	70 e3       	ldi	r23, 0x30	; 48
    175c:	7c 93       	st	X, r23
    175e:	20 13       	cpse	r18, r16
    1760:	b8 f7       	brcc	.-18     	; 0x1750 <__ftoa_engine+0x174>
    1762:	7e 91       	ld	r23, -X
    1764:	70 61       	ori	r23, 0x10	; 16
    1766:	7d 93       	st	X+, r23
    1768:	30 f0       	brcs	.+12     	; 0x1776 <__ftoa_engine+0x19a>
    176a:	83 95       	inc	r24
    176c:	71 e3       	ldi	r23, 0x31	; 49
    176e:	7d 93       	st	X+, r23
    1770:	70 e3       	ldi	r23, 0x30	; 48
    1772:	2a 95       	dec	r18
    1774:	e1 f7       	brne	.-8      	; 0x176e <__ftoa_engine+0x192>
    1776:	11 24       	eor	r1, r1
    1778:	ef 90       	pop	r14
    177a:	ff 90       	pop	r15
    177c:	0f 91       	pop	r16
    177e:	1f 91       	pop	r17
    1780:	cf 91       	pop	r28
    1782:	df 91       	pop	r29
    1784:	99 27       	eor	r25, r25
    1786:	87 fd       	sbrc	r24, 7
    1788:	90 95       	com	r25
    178a:	08 95       	ret

0000178c <strnlen_P>:
    178c:	fc 01       	movw	r30, r24
    178e:	05 90       	lpm	r0, Z+
    1790:	61 50       	subi	r22, 0x01	; 1
    1792:	70 40       	sbci	r23, 0x00	; 0
    1794:	01 10       	cpse	r0, r1
    1796:	d8 f7       	brcc	.-10     	; 0x178e <strnlen_P+0x2>
    1798:	80 95       	com	r24
    179a:	90 95       	com	r25
    179c:	8e 0f       	add	r24, r30
    179e:	9f 1f       	adc	r25, r31
    17a0:	08 95       	ret

000017a2 <strnlen>:
    17a2:	fc 01       	movw	r30, r24
    17a4:	61 50       	subi	r22, 0x01	; 1
    17a6:	70 40       	sbci	r23, 0x00	; 0
    17a8:	01 90       	ld	r0, Z+
    17aa:	01 10       	cpse	r0, r1
    17ac:	d8 f7       	brcc	.-10     	; 0x17a4 <strnlen+0x2>
    17ae:	80 95       	com	r24
    17b0:	90 95       	com	r25
    17b2:	8e 0f       	add	r24, r30
    17b4:	9f 1f       	adc	r25, r31
    17b6:	08 95       	ret

000017b8 <fputc>:
    17b8:	0f 93       	push	r16
    17ba:	1f 93       	push	r17
    17bc:	cf 93       	push	r28
    17be:	df 93       	push	r29
    17c0:	fb 01       	movw	r30, r22
    17c2:	23 81       	ldd	r18, Z+3	; 0x03
    17c4:	21 fd       	sbrc	r18, 1
    17c6:	03 c0       	rjmp	.+6      	; 0x17ce <fputc+0x16>
    17c8:	8f ef       	ldi	r24, 0xFF	; 255
    17ca:	9f ef       	ldi	r25, 0xFF	; 255
    17cc:	2c c0       	rjmp	.+88     	; 0x1826 <fputc+0x6e>
    17ce:	22 ff       	sbrs	r18, 2
    17d0:	16 c0       	rjmp	.+44     	; 0x17fe <fputc+0x46>
    17d2:	46 81       	ldd	r20, Z+6	; 0x06
    17d4:	57 81       	ldd	r21, Z+7	; 0x07
    17d6:	24 81       	ldd	r18, Z+4	; 0x04
    17d8:	35 81       	ldd	r19, Z+5	; 0x05
    17da:	42 17       	cp	r20, r18
    17dc:	53 07       	cpc	r21, r19
    17de:	44 f4       	brge	.+16     	; 0x17f0 <fputc+0x38>
    17e0:	a0 81       	ld	r26, Z
    17e2:	b1 81       	ldd	r27, Z+1	; 0x01
    17e4:	9d 01       	movw	r18, r26
    17e6:	2f 5f       	subi	r18, 0xFF	; 255
    17e8:	3f 4f       	sbci	r19, 0xFF	; 255
    17ea:	31 83       	std	Z+1, r19	; 0x01
    17ec:	20 83       	st	Z, r18
    17ee:	8c 93       	st	X, r24
    17f0:	26 81       	ldd	r18, Z+6	; 0x06
    17f2:	37 81       	ldd	r19, Z+7	; 0x07
    17f4:	2f 5f       	subi	r18, 0xFF	; 255
    17f6:	3f 4f       	sbci	r19, 0xFF	; 255
    17f8:	37 83       	std	Z+7, r19	; 0x07
    17fa:	26 83       	std	Z+6, r18	; 0x06
    17fc:	14 c0       	rjmp	.+40     	; 0x1826 <fputc+0x6e>
    17fe:	8b 01       	movw	r16, r22
    1800:	ec 01       	movw	r28, r24
    1802:	fb 01       	movw	r30, r22
    1804:	00 84       	ldd	r0, Z+8	; 0x08
    1806:	f1 85       	ldd	r31, Z+9	; 0x09
    1808:	e0 2d       	mov	r30, r0
    180a:	09 95       	icall
    180c:	89 2b       	or	r24, r25
    180e:	e1 f6       	brne	.-72     	; 0x17c8 <fputc+0x10>
    1810:	d8 01       	movw	r26, r16
    1812:	16 96       	adiw	r26, 0x06	; 6
    1814:	8d 91       	ld	r24, X+
    1816:	9c 91       	ld	r25, X
    1818:	17 97       	sbiw	r26, 0x07	; 7
    181a:	01 96       	adiw	r24, 0x01	; 1
    181c:	17 96       	adiw	r26, 0x07	; 7
    181e:	9c 93       	st	X, r25
    1820:	8e 93       	st	-X, r24
    1822:	16 97       	sbiw	r26, 0x06	; 6
    1824:	ce 01       	movw	r24, r28
    1826:	df 91       	pop	r29
    1828:	cf 91       	pop	r28
    182a:	1f 91       	pop	r17
    182c:	0f 91       	pop	r16
    182e:	08 95       	ret

00001830 <__ultoa_invert>:
    1830:	fa 01       	movw	r30, r20
    1832:	aa 27       	eor	r26, r26
    1834:	28 30       	cpi	r18, 0x08	; 8
    1836:	51 f1       	breq	.+84     	; 0x188c <__ultoa_invert+0x5c>
    1838:	20 31       	cpi	r18, 0x10	; 16
    183a:	81 f1       	breq	.+96     	; 0x189c <__ultoa_invert+0x6c>
    183c:	e8 94       	clt
    183e:	6f 93       	push	r22
    1840:	6e 7f       	andi	r22, 0xFE	; 254
    1842:	6e 5f       	subi	r22, 0xFE	; 254
    1844:	7f 4f       	sbci	r23, 0xFF	; 255
    1846:	8f 4f       	sbci	r24, 0xFF	; 255
    1848:	9f 4f       	sbci	r25, 0xFF	; 255
    184a:	af 4f       	sbci	r26, 0xFF	; 255
    184c:	b1 e0       	ldi	r27, 0x01	; 1
    184e:	3e d0       	rcall	.+124    	; 0x18cc <__ultoa_invert+0x9c>
    1850:	b4 e0       	ldi	r27, 0x04	; 4
    1852:	3c d0       	rcall	.+120    	; 0x18cc <__ultoa_invert+0x9c>
    1854:	67 0f       	add	r22, r23
    1856:	78 1f       	adc	r23, r24
    1858:	89 1f       	adc	r24, r25
    185a:	9a 1f       	adc	r25, r26
    185c:	a1 1d       	adc	r26, r1
    185e:	68 0f       	add	r22, r24
    1860:	79 1f       	adc	r23, r25
    1862:	8a 1f       	adc	r24, r26
    1864:	91 1d       	adc	r25, r1
    1866:	a1 1d       	adc	r26, r1
    1868:	6a 0f       	add	r22, r26
    186a:	71 1d       	adc	r23, r1
    186c:	81 1d       	adc	r24, r1
    186e:	91 1d       	adc	r25, r1
    1870:	a1 1d       	adc	r26, r1
    1872:	20 d0       	rcall	.+64     	; 0x18b4 <__ultoa_invert+0x84>
    1874:	09 f4       	brne	.+2      	; 0x1878 <__ultoa_invert+0x48>
    1876:	68 94       	set
    1878:	3f 91       	pop	r19
    187a:	2a e0       	ldi	r18, 0x0A	; 10
    187c:	26 9f       	mul	r18, r22
    187e:	11 24       	eor	r1, r1
    1880:	30 19       	sub	r19, r0
    1882:	30 5d       	subi	r19, 0xD0	; 208
    1884:	31 93       	st	Z+, r19
    1886:	de f6       	brtc	.-74     	; 0x183e <__ultoa_invert+0xe>
    1888:	cf 01       	movw	r24, r30
    188a:	08 95       	ret
    188c:	46 2f       	mov	r20, r22
    188e:	47 70       	andi	r20, 0x07	; 7
    1890:	40 5d       	subi	r20, 0xD0	; 208
    1892:	41 93       	st	Z+, r20
    1894:	b3 e0       	ldi	r27, 0x03	; 3
    1896:	0f d0       	rcall	.+30     	; 0x18b6 <__ultoa_invert+0x86>
    1898:	c9 f7       	brne	.-14     	; 0x188c <__ultoa_invert+0x5c>
    189a:	f6 cf       	rjmp	.-20     	; 0x1888 <__ultoa_invert+0x58>
    189c:	46 2f       	mov	r20, r22
    189e:	4f 70       	andi	r20, 0x0F	; 15
    18a0:	40 5d       	subi	r20, 0xD0	; 208
    18a2:	4a 33       	cpi	r20, 0x3A	; 58
    18a4:	18 f0       	brcs	.+6      	; 0x18ac <__ultoa_invert+0x7c>
    18a6:	49 5d       	subi	r20, 0xD9	; 217
    18a8:	31 fd       	sbrc	r19, 1
    18aa:	40 52       	subi	r20, 0x20	; 32
    18ac:	41 93       	st	Z+, r20
    18ae:	02 d0       	rcall	.+4      	; 0x18b4 <__ultoa_invert+0x84>
    18b0:	a9 f7       	brne	.-22     	; 0x189c <__ultoa_invert+0x6c>
    18b2:	ea cf       	rjmp	.-44     	; 0x1888 <__ultoa_invert+0x58>
    18b4:	b4 e0       	ldi	r27, 0x04	; 4
    18b6:	a6 95       	lsr	r26
    18b8:	97 95       	ror	r25
    18ba:	87 95       	ror	r24
    18bc:	77 95       	ror	r23
    18be:	67 95       	ror	r22
    18c0:	ba 95       	dec	r27
    18c2:	c9 f7       	brne	.-14     	; 0x18b6 <__ultoa_invert+0x86>
    18c4:	00 97       	sbiw	r24, 0x00	; 0
    18c6:	61 05       	cpc	r22, r1
    18c8:	71 05       	cpc	r23, r1
    18ca:	08 95       	ret
    18cc:	9b 01       	movw	r18, r22
    18ce:	ac 01       	movw	r20, r24
    18d0:	0a 2e       	mov	r0, r26
    18d2:	06 94       	lsr	r0
    18d4:	57 95       	ror	r21
    18d6:	47 95       	ror	r20
    18d8:	37 95       	ror	r19
    18da:	27 95       	ror	r18
    18dc:	ba 95       	dec	r27
    18de:	c9 f7       	brne	.-14     	; 0x18d2 <__ultoa_invert+0xa2>
    18e0:	62 0f       	add	r22, r18
    18e2:	73 1f       	adc	r23, r19
    18e4:	84 1f       	adc	r24, r20
    18e6:	95 1f       	adc	r25, r21
    18e8:	a0 1d       	adc	r26, r0
    18ea:	08 95       	ret

000018ec <__prologue_saves__>:
    18ec:	2f 92       	push	r2
    18ee:	3f 92       	push	r3
    18f0:	4f 92       	push	r4
    18f2:	5f 92       	push	r5
    18f4:	6f 92       	push	r6
    18f6:	7f 92       	push	r7
    18f8:	8f 92       	push	r8
    18fa:	9f 92       	push	r9
    18fc:	af 92       	push	r10
    18fe:	bf 92       	push	r11
    1900:	cf 92       	push	r12
    1902:	df 92       	push	r13
    1904:	ef 92       	push	r14
    1906:	ff 92       	push	r15
    1908:	0f 93       	push	r16
    190a:	1f 93       	push	r17
    190c:	cf 93       	push	r28
    190e:	df 93       	push	r29
    1910:	cd b7       	in	r28, 0x3d	; 61
    1912:	de b7       	in	r29, 0x3e	; 62
    1914:	ca 1b       	sub	r28, r26
    1916:	db 0b       	sbc	r29, r27
    1918:	0f b6       	in	r0, 0x3f	; 63
    191a:	f8 94       	cli
    191c:	de bf       	out	0x3e, r29	; 62
    191e:	0f be       	out	0x3f, r0	; 63
    1920:	cd bf       	out	0x3d, r28	; 61
    1922:	09 94       	ijmp

00001924 <__epilogue_restores__>:
    1924:	2a 88       	ldd	r2, Y+18	; 0x12
    1926:	39 88       	ldd	r3, Y+17	; 0x11
    1928:	48 88       	ldd	r4, Y+16	; 0x10
    192a:	5f 84       	ldd	r5, Y+15	; 0x0f
    192c:	6e 84       	ldd	r6, Y+14	; 0x0e
    192e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1930:	8c 84       	ldd	r8, Y+12	; 0x0c
    1932:	9b 84       	ldd	r9, Y+11	; 0x0b
    1934:	aa 84       	ldd	r10, Y+10	; 0x0a
    1936:	b9 84       	ldd	r11, Y+9	; 0x09
    1938:	c8 84       	ldd	r12, Y+8	; 0x08
    193a:	df 80       	ldd	r13, Y+7	; 0x07
    193c:	ee 80       	ldd	r14, Y+6	; 0x06
    193e:	fd 80       	ldd	r15, Y+5	; 0x05
    1940:	0c 81       	ldd	r16, Y+4	; 0x04
    1942:	1b 81       	ldd	r17, Y+3	; 0x03
    1944:	aa 81       	ldd	r26, Y+2	; 0x02
    1946:	b9 81       	ldd	r27, Y+1	; 0x01
    1948:	ce 0f       	add	r28, r30
    194a:	d1 1d       	adc	r29, r1
    194c:	0f b6       	in	r0, 0x3f	; 63
    194e:	f8 94       	cli
    1950:	de bf       	out	0x3e, r29	; 62
    1952:	0f be       	out	0x3f, r0	; 63
    1954:	cd bf       	out	0x3d, r28	; 61
    1956:	ed 01       	movw	r28, r26
    1958:	08 95       	ret

0000195a <_exit>:
    195a:	f8 94       	cli

0000195c <__stop_program>:
    195c:	ff cf       	rjmp	.-2      	; 0x195c <__stop_program>
